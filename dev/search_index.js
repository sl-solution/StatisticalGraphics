var documenterSearchIndex = {"docs":
[{"location":"Plots/Density/density/#demo_density1","page":"Density","title":"Density","text":"","category":"section"},{"location":"Plots/Density/density/","page":"Density","title":"Density","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Density/density/","page":"Density","title":"Density","text":"using InMemoryDatasets, DLMReader, StatisticalGraphics\n\ny = rand([0, 2, 6], 100) #hide\nsvg(\"assets/density1.svg\", sgplot(Dataset(x=randn(100) .+ y, y=y), Density(x=:x, type=:kernel, group=:y), nominal=:y, legend=false, width=100, height=100, xaxis=Axis(translate=0,offset=0, grid=true, griddash=[3]), yaxis=Axis(translate=0, grid=true, offset=0, griddash=[3]))) #hide","category":"page"},{"location":"Plots/Density/density/","page":"Density","title":"Density","text":"Density can be used to fit a normal pdf or a kernel density to data. By default it used normal density.","category":"page"},{"location":"Plots/Density/density/","page":"Density","title":"Density","text":"ds = Dataset(x=rand(100))\n\nsgplot(ds, Density(x=:x))","category":"page"},{"location":"Plots/Density/density/","page":"Density","title":"Density","text":"Passing type=:kernel allows fitting a kernel Distributions","category":"page"},{"location":"Plots/Density/density/","page":"Density","title":"Density","text":"sgplot(ds, Density(x=:x, type=:kernel))","category":"page"},{"location":"Plots/Density/density/","page":"Density","title":"Density","text":"Density like other plots allow group","category":"page"},{"location":"Plots/Density/density/","page":"Density","title":"Density","text":"iris = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"iris.csv\"))\n\nsgplot(iris,\n        Density(x=:SepalLength, type=:kernel, group=:Species)\n)","category":"page"},{"location":"Plots/Density/density/","page":"Density","title":"Density","text":"Users allow to combine Density and Histogram","category":"page"},{"location":"Plots/Density/density/","page":"Density","title":"Density","text":"ds = Dataset(x=randn(100));\nsgplot(\n        ds,\n        [\n          Histogram(x=:x, color=:steelblue, outlinethickness=0.5, space=0.5),\n          Density(x=:x, type=:kernel, color=:red, fillopacity=0.3),\n          Density(x=:x, color=:green, fillopacity=0.3)\n        ],\n        xaxis = Axis(offset=10, domain=false),\n        yaxis = Axis(offset=10, domain=false, grid=true)\n      )","category":"page"},{"location":"Plots/Density/density/","page":"Density","title":"Density","text":"","category":"page"},{"location":"Plots/Density/density/","page":"Density","title":"Density","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"Plots/Heatmap/heatmap/#demo_heatmap1","page":"Heatmap","title":"Heatmap","text":"","category":"section"},{"location":"Plots/Heatmap/heatmap/","page":"Heatmap","title":"Heatmap","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Heatmap/heatmap/","page":"Heatmap","title":"Heatmap","text":"using InMemoryDatasets, DLMReader, StatisticalGraphics\n\nsvg(\"assets/heat1.svg\", sgplot(Dataset(x=randn(1000),y=randn(1000)), Heatmap(x=:x, y=:y, xbincount=5, ybincount=5), width=100, height=100, xaxis=Axis(translate=0,offset=0, grid=true, griddash=[3]), yaxis=Axis(translate=0, grid=true, offset=0, griddash=[3]), legend=false)) #hide","category":"page"},{"location":"Plots/Heatmap/heatmap/","page":"Heatmap","title":"Heatmap","text":"Example","category":"page"},{"location":"Plots/Heatmap/heatmap/","page":"Heatmap","title":"Heatmap","text":"ds = Dataset(x=randn(10000), y=randn(10000))\n\nsgplot(ds, Heatmap(x=:x, y=:y))","category":"page"},{"location":"Plots/Heatmap/heatmap/","page":"Heatmap","title":"Heatmap","text":"","category":"page"},{"location":"Plots/Heatmap/heatmap/","page":"Heatmap","title":"Heatmap","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"Plots/Bubble/bubble/#demo_bubble1","page":"Bubble plot","title":"Bubble plot","text":"","category":"section"},{"location":"Plots/Bubble/bubble/","page":"Bubble plot","title":"Bubble plot","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Bubble/bubble/","page":"Bubble plot","title":"Bubble plot","text":"using InMemoryDatasets, StatisticalGraphics, DLMReader, Chain\n\nsvg(\"assets/bubble1.svg\", sgplot(filter(filereader(joinpath(dirname(pathof(StatisticalGraphics)),\"..\", \"docs\", \"assets\", \"nations.csv\"), emptycolname=true, quotechar='\"'), :year, by = ==(2010))[1:3:150, :], Bubble(x=:gdpPercap,y=:lifeExp, size=:population, colorresponse=:region, labelfont=\"Times\", labelsize=8, labelcolor=:group, thickness=0.1, maxsize=20, outlinecolor=:white), clip=false, xaxis=Axis(grid=true, domain=false, labelcolor=:white, titlecolor=:white, tickcolor=:white, gridcolor=:lightgray, gridthickness=0.2, offset=0, tickcount=10, type=:log), yaxis=Axis(grid=true, gridcolor=:lightgray,gridthickness=0.2, offset=0, tickcount=10,domain=false, labelcolor=:white, titlecolor=:white, tickcolor=:white), width=100, height=100, legend=false)) #hide","category":"page"},{"location":"Plots/Bubble/bubble/","page":"Bubble plot","title":"Bubble plot","text":"Bubble is similar to Scatter, however, user can pass a size column to Buble","category":"page"},{"location":"Plots/Bubble/bubble/","page":"Bubble plot","title":"Bubble plot","text":"ds = Dataset(rand(20, 3), :auto)\n\nsgplot(ds, Bubble(x=:x1, y=:x2, size=:x3), clip=false)","category":"page"},{"location":"Plots/Bubble/bubble/","page":"Bubble plot","title":"Bubble plot","text":"Bubble support most of the keywords available to Scatter","category":"page"},{"location":"Plots/Bubble/bubble/","page":"Bubble plot","title":"Bubble plot","text":"nations = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"nations.csv\"),\n                                 emptycolname=true, quotechar='\"')\n\n@chain nations begin\n  sort([:population, :continent], rev=[true, false]);\n  filter(:year, by = ==(2010));\n  sgplot(\n    Bubble(x=:gdpPercap,\n           y=:lifeExp,\n           colorresponse=:region,\n           colormodel=:category,\n           size=:population,\n           outlinecolor=:white,\n           labelresponse=:country,\n           labelsize=8,\n           labelcolor=:colorresponse,\n           maxsize=70,\n           tooltip=true\n          ),\n          clip=false,\n          xaxis=Axis(type=:log, nice=false),\n      )\nend","category":"page"},{"location":"Plots/Bubble/bubble/","page":"Bubble plot","title":"Bubble plot","text":"","category":"page"},{"location":"Plots/Bubble/bubble/","page":"Bubble plot","title":"Bubble plot","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"Plots/Scatter/scatter3/#demo_scatterplot_group1","page":"Using grouping variables","title":"Using grouping variables","text":"","category":"section"},{"location":"Plots/Scatter/scatter3/","page":"Using grouping variables","title":"Using grouping variables","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Scatter/scatter3/","page":"Using grouping variables","title":"Using grouping variables","text":"using InMemoryDatasets, StatisticalGraphics, DLMReader\n\nsvg(\"assets/scatter_plot_group1.svg\", sgplot(Dataset(x=rand(100), y=rand(100), g=rand(1:4, 100)), Scatter(x=:x, y=:y, size=100, outlinecolor=:white, colorresponse=:y, colormodel=Dict(:scheme=>:darkgreen), legend=:s_leg), clip=false, wallcolor=:lightgray, xaxis=Axis(grid=true, gridcolor=:white, offset=0), yaxis=Axis(grid=true, gridcolor=:white, offset=0), width=100, height=100, legend=Legend(name=:s_leg, gradientlength=80, gradientthickness=10))) #hide","category":"page"},{"location":"Plots/Scatter/scatter3/","page":"Using grouping variables","title":"Using grouping variables","text":"Scatter like many other plot types accepts a group keyword argument to group observations and creat a separate plot for each group. The groups are distinguishable by color.","category":"page"},{"location":"Plots/Scatter/scatter3/","page":"Using grouping variables","title":"Using grouping variables","text":"iris = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"iris.csv\"))\nsgplot(iris, Scatter(x=:PetalLength, y=:SepalLength,\n                                     group=:Species, thickness=3),\n                                     wallcolor=:lightgray,\n                                     clip=false)","category":"page"},{"location":"Plots/Scatter/scatter3/","page":"Using grouping variables","title":"Using grouping variables","text":"More examples,","category":"page"},{"location":"Plots/Scatter/scatter3/","page":"Using grouping variables","title":"Using grouping variables","text":"# generate random data\nds = Dataset(x=rand(100), y=rand(100), g=rand(1:4, 100))\n\nsgplot(ds, Scatter(x=:x, y=:y, size=200, group=:g,\n                         color=:white, clip=false))","category":"page"},{"location":"Plots/Scatter/scatter3/","page":"Using grouping variables","title":"Using grouping variables","text":"In the previous example column :g was used to group observations. Since :g is a numeric column, sgplot automatically assigns a continous color bar in the legend of the plot, however, user can pass a list of nominal columns to sgplot to override the default behaviour.","category":"page"},{"location":"Plots/Scatter/scatter3/","page":"Using grouping variables","title":"Using grouping variables","text":"sgplot(ds, Scatter(x=:x, y=:y, size=200, group=:g,\n                         color=:white, clip=false), nominal=:g)","category":"page"},{"location":"Plots/Scatter/scatter3/","page":"Using grouping variables","title":"Using grouping variables","text":"Scatter allows user to pass a column to control the fill color of points, i.e. the fill color of the points will be affected by the value of the passed column to the colorresponse keyword argument","category":"page"},{"location":"Plots/Scatter/scatter3/","page":"Using grouping variables","title":"Using grouping variables","text":"sgplot(ds, Scatter(x=:x, y=:y, size=200, colorresponse=:g,\n                         color=:white, clip=false), nominal=:g)","category":"page"},{"location":"Plots/Scatter/scatter3/","page":"Using grouping variables","title":"Using grouping variables","text":"Additionally, Scatter allows users to pass extra columns as symbolresponse, angleresponse, or  opacityresponse. In this case the corresponding property will be changed depending on the values of the passed column.","category":"page"},{"location":"Plots/Scatter/scatter3/","page":"Using grouping variables","title":"Using grouping variables","text":"sgplot(ds, Scatter(x=:x, y=:y, size=200, symbolresponse=:g,\n                         clip=false), nominal=:g)","category":"page"},{"location":"Plots/Scatter/scatter3/","page":"Using grouping variables","title":"Using grouping variables","text":"The same column can be used for multiple purposes:","category":"page"},{"location":"Plots/Scatter/scatter3/","page":"Using grouping variables","title":"Using grouping variables","text":"sgplot(ds, Scatter(x=:x, y=:y, size=200, group=:g,\n                         symbolresponse=:g, clip=false), nominal=:g)","category":"page"},{"location":"Plots/Scatter/scatter3/","page":"Using grouping variables","title":"Using grouping variables","text":"colormodel allows users to pass a customised color scheme (or a vector of colors) for colorresponse","category":"page"},{"location":"Plots/Scatter/scatter3/","page":"Using grouping variables","title":"Using grouping variables","text":"sgplot(ds, Scatter(x=:x, y=:y, size=200, group=:g,\n                         thickness=2,\n                         symbolresponse=:g,\n                         colorresponse=:g,\n                         colormodel=Dict(:scheme=>:turbo),\n                         clip=false), nominal=:g)","category":"page"},{"location":"Plots/Scatter/scatter3/","page":"Using grouping variables","title":"Using grouping variables","text":"","category":"page"},{"location":"Plots/Scatter/scatter3/","page":"Using grouping variables","title":"Using grouping variables","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"man/movies/#Fitting-Regression-Line","page":"Movies","title":"Fitting Regression Line","text":"","category":"section"},{"location":"man/movies/#Movies-data","page":"Movies","title":"Movies data","text":"","category":"section"},{"location":"man/movies/","page":"Movies","title":"Movies","text":"using InMemoryDatasets, DLMReader, StatisticalGraphics, Chain\n\nmovies = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                              \"..\", \"docs\", \"assets\", \"movies.csv\"),\n                              dlmstr=\"::\")\n\nrename!(movies, \"Major Genre\"=>\"Genre\")\n\n@chain movies begin\n    delete(\"Genre\", by=contains(\"Concert\"), missings=false)\n    groupby(\"Genre\")\n    sgmanipulate(\n        [\n            Scatter(x=\"Rotten Tomatoes Rating\", y=\"IMDB Rating\",\n                        size=10,\n                        labelresponse=:Title,\n                        labelsize=5,\n                        tooltip=true\n            ),\n            Reg(\n                x=\"Rotten Tomatoes Rating\", y=\"IMDB Rating\",\n                degree=3,\n                clm=true,\n            )\n        ],\n        xaxis=Axis(grid=true, gridcolor=:white),\n        yaxis=Axis(grid=true, gridcolor=:white),\n        width=400,\n        wallcolor=:lightgray,\n        clip=false\n    )\nend","category":"page"},{"location":"Plots/BoxPlot/boxplot/#demo_boxplot1","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"","category":"section"},{"location":"Plots/BoxPlot/boxplot/","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/BoxPlot/boxplot/","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"using InMemoryDatasets, StatisticalGraphics, DLMReader\n\nsvg(\"assets/box_plot1.svg\", sgplot(Dataset(randn(100, 4), :auto), BoxPlot(y=1:4, whiskerdash=[0], outliers=true), width=100, height=100, xaxis=Axis(offset=0, domain=false,labelcolor=:black, tickcolor=:white,titlecolor=:white), yaxis=Axis(offset=0,domain=false,labelcolor=:white, tickcolor=:white,titlecolor=:white), legend=false, clip=false)) #hide","category":"page"},{"location":"Plots/BoxPlot/boxplot/","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"BoxPlot produces box-whisker chart","category":"page"},{"location":"Plots/BoxPlot/boxplot/","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"iris = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"iris.csv\"))\nsgplot(iris, BoxPlot(x=1:4))","category":"page"},{"location":"Plots/BoxPlot/boxplot/","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"Setting outliers=true add outlier points to the plot. The outliersfactor keyword controls the factor of outlierness.","category":"page"},{"location":"Plots/BoxPlot/boxplot/","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"sgplot(iris, BoxPlot(x=1:4, outliers=true))","category":"page"},{"location":"Plots/BoxPlot/boxplot/","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"The following examples show how the properties of box plots can be customised","category":"page"},{"location":"Plots/BoxPlot/boxplot/","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"sgplot(iris, BoxPlot(y=1:4, outliers=true,\n                        boxwidth=0.7,\n                        whiskerdash=[0],\n                        whiskercolor=:white,\n                        fencecolor=:white,\n                        outliersymbolsize=100),\n                        width=300,\n                        wallcolor=:black)","category":"page"},{"location":"Plots/BoxPlot/boxplot/","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"Box Plot","category":"page"},{"location":"Plots/BoxPlot/boxplot/","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"Reproducing an example from the D3`s examples collection.","category":"page"},{"location":"Plots/BoxPlot/boxplot/","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"Using the format feature of InMemoryDataset to manually bin data before plotting a box plot.","category":"page"},{"location":"Plots/BoxPlot/boxplot/","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"diamond = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                           \"..\", \"docs\", \"assets\", \"diamonds.csv\"))\ncarat_fmt(x) = round((searchsortedfirst(0.19:0.2:5.02, x)-2)*.2 + 0.3, digits=2)\nsetformat!(diamond, :carat=>carat_fmt)\n\nsgplot(\n        diamond,\n        BoxPlot(y=:price, category =:carat,\n                mediancolor=:black, medianthickness = 0.5,\n                fencewidth=0,\n                whiskerdash=[0], whiskerthickness = 0.5,\n\n                outliers = true,\n                outlierjitter = 5,\n                outliersymbolsize=10,\n                outliercolor=:black,\n                outlieropacity=0.1\n              ),\n        yaxis=Axis(domain = false, nice=false, grid=true),\n        groupcolormodel=[\"lightgray\"],\n        legend=false,\n        width=800\n      )","category":"page"},{"location":"Plots/BoxPlot/boxplot/","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"Users can pass name of a column as category to produce separate BoxPlot for each level the passed column,","category":"page"},{"location":"Plots/BoxPlot/boxplot/","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"sgplot(iris, BoxPlot(x=1:4, category=5, outliers=true))","category":"page"},{"location":"Plots/BoxPlot/boxplot/","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"As another example","category":"page"},{"location":"Plots/BoxPlot/boxplot/","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"ds = Dataset(randn(100, 10), :auto)\n\ninsertcols!(ds, :Category=>rand(1:3, nrow(ds)))\n\nsgplot(ds, BoxPlot(y=1:10, category=:Category,\n                      whiskerdash=[0],\n                      outlinethickness=0.3,\n                      whiskerthickness=0.3),\n                      groupcolormodel=Dict(:scheme=>:darkgreen),\n                      yaxis=Axis(show=false),\n                      legend=false,\n                      clip=false\n                      )","category":"page"},{"location":"Plots/BoxPlot/boxplot/","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"Application - Dubai weather","category":"page"},{"location":"Plots/BoxPlot/boxplot/","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"dubai_weather = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"dubai_weather.csv\"),\n                                 types=Dict(1 =>Date))\n\nmodify!(dubai_weather, :date=>byrow(week)=>:Week)\nsetformat!(dubai_weather, :date=>month)\n\nsgplot(\n        dubai_weather,\n        [\n          BoxPlot(y=[:min, :max], category=:date, outliers=true),\n          BoxPlot(y=:pressure, category=:Week, opacity=0.5, y2axis=true, outliers=true, x2axis=true)\n        ],\n        xaxis=Axis(title=\"Month\"),\n        yaxis=Axis(title=\"Temperature\"),\n        y2axis=Axis(title=\"Pressure\", d3format=\"f\"),\n        x2axis=Axis(values=3:4:53),\n        height=600\n      )","category":"page"},{"location":"Plots/BoxPlot/boxplot/","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"","category":"page"},{"location":"Plots/BoxPlot/boxplot/","page":"Box-Whisker chart","title":"Box-Whisker chart","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"Plots/Bar/bar3/#demo_bar_chart3","page":"Diverging stacked bar chart","title":"Diverging stacked bar chart","text":"","category":"section"},{"location":"Plots/Bar/bar3/","page":"Diverging stacked bar chart","title":"Diverging stacked bar chart","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Bar/bar3/","page":"Diverging stacked bar chart","title":"Diverging stacked bar chart","text":"using InMemoryDatasets, StatisticalGraphics, DLMReader\n\nsvg(\"assets/bar_chart3.svg\", sgplot(Dataset(x=repeat(1:5, inner=2), y=[5,6,7,8,6,7,4,4,2,1], g=repeat(1:2, 5),z=[-5,0,-7,0,-6,0,-4,0,-2,0]), Bar(y=:x, response=:y, group=:g, baselineresponse=:z, baselinestat=sum, space=0), nominal=:g, yaxis=Axis(reverse=true, domain=false, titlecolor=:white, labelcolor=:white, tickcolor=:white), xaxis=Axis(domain=false, titlecolor=:white, values=([-4,4], [\"Male\", \"Female\"]), tickcolor=:white), width=100, height=100, legend=false, )) #hide\n\npopulation = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                              \"..\", \"docs\", \"assets\", \"population.csv\"))\n\nsex(x) = x == 1 ? \"male\" : \"female\" # format for :sex\n\nsetformat!(population, :sex => sex)\n\npop2000 = filter(population, :year, by = ==(2000))\n\nfirst(pop2000, 6)","category":"page"},{"location":"Plots/Bar/bar3/","page":"Diverging stacked bar chart","title":"Diverging stacked bar chart","text":"Creating population pyramid using overlaid bar charts","category":"page"},{"location":"Plots/Bar/bar3/","page":"Diverging stacked bar chart","title":"Diverging stacked bar chart","text":"tpop = transpose(groupby(pop2000, :age), :people, id = :sex)\n\nsetformat!(tpop, :female => -)\n\nsgplot(tpop, [Bar(y=:age, response=:female),\n                  Bar(y=:age, response=:male, color=:darkorange)],\n                  yaxis=Axis(reverse=true),\n                  xaxis=Axis(title=\"Population\", values=((-12:3:12).*10^6, string.(abs.(-12:3:12), \"M\"))))","category":"page"},{"location":"Plots/Bar/bar3/","page":"Diverging stacked bar chart","title":"Diverging stacked bar chart","text":"For this example we can also use the baselineresponse keyword argument to create the pyramid.","category":"page"},{"location":"Plots/Bar/bar3/","page":"Diverging stacked bar chart","title":"Diverging stacked bar chart","text":"We pass values to xaxis to make sure the labels are shown properly","category":"page"},{"location":"Plots/Bar/bar3/","page":"Diverging stacked bar chart","title":"Diverging stacked bar chart","text":"base_stat(f, x) = -last(x) # use the negative value of female pop as baseline\n\nsgplot(pop2000, Bar(y=:age, response=:people, group=:sex,\n                            baselineresponse = :people,\n                            baselinestat=base_stat),\n                            yaxis=Axis(reverse=true),\n                            xaxis=Axis(title=\"Population\", values=((-12:3:12).*10^6, string.(abs.(-12:3:12), \"M\"))))","category":"page"},{"location":"Plots/Bar/bar3/","page":"Diverging stacked bar chart","title":"Diverging stacked bar chart","text":"Stacked Bar Chart, Diverging","category":"page"},{"location":"Plots/Bar/bar3/","page":"Diverging stacked bar chart","title":"Diverging stacked bar chart","text":"Reproducing an example from the D3`s examples collection.","category":"page"},{"location":"Plots/Bar/bar3/","page":"Diverging stacked bar chart","title":"Diverging stacked bar chart","text":"Using the baselineresponse keyword argument to control the baseline of bars in each category.","category":"page"},{"location":"Plots/Bar/bar3/","page":"Diverging stacked bar chart","title":"Diverging stacked bar chart","text":"ds = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                              \"..\", \"docs\", \"assets\", \"politifact.csv\"))\nds_order = Dataset(ruling = [\"true\", \"mostly-true\", \"half-true\",\"barely-true\", \"false\", \"full-flop\", \"pants-fire\"],\n                  Ruling = [\"True\", \"Mostly true\", \"Half true\", \"Mostly false\", \"False\", \"False\", \"Pants on fire!\"],\n                  order = 1:7,\n                  weight = [0,0,0,-1,-1,-1,-1])\nleftjoin!(ds, ds_order, on = :ruling)\nsort!(ds, [:order], rev=true) # order Ruling\nmodify!(\n        groupby(ds, :speaker),\n        :count=> x->x ./ IMD.sum(x), # normalise counts\n        [:count, :weight]=> byrow(prod) =>:baseline\n        )\n\nsgplot(\n        ds,\n        [\n          Bar(y=:speaker, response=:count,\n              group=:Ruling,\n              grouporder=:data,\n              baselineresponse=:baseline,\n              orderresponse=:baseline,\n              outlinethickness=0.1,\n              legend = :bar_leg,\n              x2axis=true\n            ),\n          RefLine(values = 0.0, axis=:x2axis)\n        ],\n        x2axis=Axis(title = \"← more lies · Truthiness · more truths →\", domain = false, d3format=\"%\", nice=false, grid=true),\n        yaxis=Axis(title = \"\", domain = false, ticks = false),\n        legend = Legend(name = :bar_leg, title = \"\", orient=:top, columns=0, size=200, columnspace = 10 ),\n        width=800,\n        height=200,\n        groupcolormodel=[\"#d53e4f\", \"#fc8d59\", \"#fee08b\", \"#e6f598\", \"#99d594\", \"#3288bd\"]\n    )","category":"page"},{"location":"Plots/Bar/bar3/","page":"Diverging stacked bar chart","title":"Diverging stacked bar chart","text":"","category":"page"},{"location":"Plots/Bar/bar3/","page":"Diverging stacked bar chart","title":"Diverging stacked bar chart","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"Plots/Violin/violin/#demo_violin1","page":"Violin plot","title":"Violin plot","text":"","category":"section"},{"location":"Plots/Violin/violin/","page":"Violin plot","title":"Violin plot","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Violin/violin/","page":"Violin plot","title":"Violin plot","text":"using InMemoryDatasets, StatisticalGraphics, DLMReader\n\nsvg(\"assets/violin1.svg\", sgplot(Dataset(randn(100, 4), :auto), Violin(y=1:4, whiskerdash=[0], outliers=true), width=100, height=100, xaxis=Axis(offset=0, domain=false,labelcolor=:black, tickcolor=:white,titlecolor=:white), yaxis=Axis(offset=0,domain=false,labelcolor=:white, tickcolor=:white,titlecolor=:white), legend=false, clip=false)) #hide","category":"page"},{"location":"Plots/Violin/violin/","page":"Violin plot","title":"Violin plot","text":"Violin produces Violin plot","category":"page"},{"location":"Plots/Violin/violin/","page":"Violin plot","title":"Violin plot","text":"iris = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"iris.csv\"))\nsgplot(iris, Violin(x=1:4))","category":"page"},{"location":"Plots/Violin/violin/","page":"Violin plot","title":"Violin plot","text":"Passing side allows to draw only half of the density curve","category":"page"},{"location":"Plots/Violin/violin/","page":"Violin plot","title":"Violin plot","text":"sgplot(iris, Violin(x=1:4, side=:top))","category":"page"},{"location":"Plots/Violin/violin/","page":"Violin plot","title":"Violin plot","text":"Violin also support the category keyword argument","category":"page"},{"location":"Plots/Violin/violin/","page":"Violin plot","title":"Violin plot","text":"sgplot(iris, Violin(x=1:4, category=5))","category":"page"},{"location":"Plots/Violin/violin/","page":"Violin plot","title":"Violin plot","text":"","category":"page"},{"location":"Plots/Violin/violin/","page":"Violin plot","title":"Violin plot","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"Plots/Bar/bar2/#demo_bar_chart2","page":"Grouped bar charts","title":"Grouped bar charts","text":"","category":"section"},{"location":"Plots/Bar/bar2/","page":"Grouped bar charts","title":"Grouped bar charts","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Bar/bar2/","page":"Grouped bar charts","title":"Grouped bar charts","text":"using InMemoryDatasets, StatisticalGraphics, DLMReader\n\nsvg(\"assets/bar_chart2.svg\", sgplot(Dataset(x=repeat('A':'C', inner=3), y=rand(9).+1, g=repeat(1:3, outer=3)), Bar(x=:x, response=:y, group=:g, groupdisplay=:cluster, space=.2, groupspace=0), nominal=:g, width=100, height=100, xaxis=Axis(offset=0, domain=false,labelcolor=:black, tickcolor=:white,titlecolor=:white), yaxis=Axis(offset=0,domain=false,labelcolor=:white, tickcolor=:white,titlecolor=:white), legend=false)) #hide","category":"page"},{"location":"Plots/Bar/bar2/","page":"Grouped bar charts","title":"Grouped bar charts","text":"Passing group will trigger the grouped bar chart.","category":"page"},{"location":"Plots/Bar/bar2/","page":"Grouped bar charts","title":"Grouped bar charts","text":"ds = Dataset(x=repeat(1:5, inner=3), y=rand(15), g=repeat('A':'C', outer=5))\n\nsgplot(ds, Bar(x=:x, response=:y, group=:g))","category":"page"},{"location":"Plots/Bar/bar2/","page":"Grouped bar charts","title":"Grouped bar charts","text":"By default the grouped are stacked, however, passing groupdisplay changes this default behaviour. Bar supports :stack, :cluster, :step, and :none as the value for groupdisplay","category":"page"},{"location":"Plots/Bar/bar2/","page":"Grouped bar charts","title":"Grouped bar charts","text":"sgplot(ds, Bar(x=:x, response=:y, group=:g, groupdisplay=:cluster))","category":"page"},{"location":"Plots/Bar/bar2/","page":"Grouped bar charts","title":"Grouped bar charts","text":"Combining barwidth=:nest and groupdisplay=:none will produce a nested bar chart. In the following example we use a color scheme to color bars.","category":"page"},{"location":"Plots/Bar/bar2/","page":"Grouped bar charts","title":"Grouped bar charts","text":"sgplot(ds, Bar(x=:x, response=:y, group=:g,\n                         groupdisplay=:none, barwidth=:nest),\n                            groupcolormodel=Dict(:scheme=>:darkgreen))","category":"page"},{"location":"Plots/Bar/bar2/","page":"Grouped bar charts","title":"Grouped bar charts","text":"Using generated data","category":"page"},{"location":"Plots/Bar/bar2/","page":"Grouped bar charts","title":"Grouped bar charts","text":"ds = Dataset(rand(1:40, 1000, 2), :auto)\n\nsgplot(ds, Bar(y=:x1, group=:x2, normalize=true, space=0),\n                groupcolormodel=:scheme=>:darkred,\n                xaxis=Axis(nice=false, show=false),\n                yaxis=Axis(show=false),\n                height=600,\n                legend=false,\n\n                )","category":"page"},{"location":"Plots/Bar/bar2/","page":"Grouped bar charts","title":"Grouped bar charts","text":"Revenue by Music Format, 1973–2018","category":"page"},{"location":"Plots/Bar/bar2/","page":"Grouped bar charts","title":"Grouped bar charts","text":"Reproducing an example from the D3`s examples collection.","category":"page"},{"location":"Plots/Bar/bar2/","page":"Grouped bar charts","title":"Grouped bar charts","text":"music = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"music.csv\"))\ncolor_ds = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"color_ds.csv\"))\nleftjoin!(music, color_ds, on = :Format)# sort data - original example\nsort!(music, [:Year, :order], rev = [false, true]) # rev = true for :order to make the color similar to the original example\n\ninbillion(x) = x/10^9 # make the yaxis' values in billion $\nsetformat!(music, r\"Infla\" => inbillion)\n\nsgplot(\n        music,\n        [\n          Bar(x = :Year, response = r\"Infla\",\n              group = :Format,\n              grouporder = :data,\n              outlinethickness = 0,\n              space = 0.05\n            )\n        ],\n        groupcolormodel = reverse!(color_ds[:, :Color]),\n        yaxis = Axis(title = \"Revenue (billion, adj.)\", domain = false, titlepos=[5,5], titleangle=0, titlealign=:left, titlesize=10),\n        xaxis = Axis(values = 1975:5:2015),\n        legend=false,\n        width = 700\n      )","category":"page"},{"location":"Plots/Bar/bar2/","page":"Grouped bar charts","title":"Grouped bar charts","text":"Users can pass normalize=true to normalise a stacked bar chart.","category":"page"},{"location":"Plots/Bar/bar2/","page":"Grouped bar charts","title":"Grouped bar charts","text":"sgplot(\n        music,\n        Bar(x=:Year, response=r\"Infla\",\n            group=:Format,\n            grouporder=:data,\n            outlinethickness=0,\n            space=0.05,\n            normalize=true,\n          ),\n        groupcolormodel=reverse!(color_ds[:, :Color]),\n        yaxis=Axis(title=\"Revenue %\", domain=false, nice=false, d3format = \"%\"),\n        xaxis=Axis(values=1975:5:2015),\n        legend=false,\n        width=700\n)","category":"page"},{"location":"Plots/Bar/bar2/","page":"Grouped bar charts","title":"Grouped bar charts","text":"","category":"page"},{"location":"Plots/Bar/bar2/","page":"Grouped bar charts","title":"Grouped bar charts","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"Plots/Scatter/scatter2/#demo_scatter_plot3","page":"Customising overall appearance","title":"Customising overall appearance","text":"","category":"section"},{"location":"Plots/Scatter/scatter2/","page":"Customising overall appearance","title":"Customising overall appearance","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Scatter/scatter2/","page":"Customising overall appearance","title":"Customising overall appearance","text":"using InMemoryDatasets, StatisticalGraphics\n\n# generate random data\nds = Dataset(x=rand(100), y=rand(100))\n\nsvg(\"assets/scatter_plot3.svg\", sgplot(ds[1:20,:], Scatter(x=:x, y=:y, size=100, outlinecolor=:steelblue, color=:white), clip=false, wallcolor=:lightgray, xaxis=Axis(grid=true, gridcolor=:white, offset=0), yaxis=Axis(grid=true, gridcolor=:white, offset=0), width=100,height=100)) #hide","category":"page"},{"location":"Plots/Scatter/scatter2/","page":"Customising overall appearance","title":"Customising overall appearance","text":"Use the size keyword argument to control the symbol's size","category":"page"},{"location":"Plots/Scatter/scatter2/","page":"Customising overall appearance","title":"Customising overall appearance","text":"sgplot(ds, Scatter(x=:x, y=:y, size=200))","category":"page"},{"location":"Plots/Scatter/scatter2/","page":"Customising overall appearance","title":"Customising overall appearance","text":"The outlinecolor and color arguments control the outline and fill color of symbol","category":"page"},{"location":"Plots/Scatter/scatter2/","page":"Customising overall appearance","title":"Customising overall appearance","text":"sgplot(ds, Scatter(x=:x, y=:y, size=200, outlinecolor=:white,\n                         color=:steelblue))","category":"page"},{"location":"Plots/Scatter/scatter2/","page":"Customising overall appearance","title":"Customising overall appearance","text":"The gradient function may be used for creating fancier colors","category":"page"},{"location":"Plots/Scatter/scatter2/","page":"Customising overall appearance","title":"Customising overall appearance","text":"sgplot(ds, Scatter(x=:x, y=:y, size=200, outlinecolor=:white,\n                         color=gradient()))","category":"page"},{"location":"Plots/Scatter/scatter2/","page":"Customising overall appearance","title":"Customising overall appearance","text":"By default, circle will be used to depict the symbol, however, user may pass the symbol argument to change the default behaviour","category":"page"},{"location":"Plots/Scatter/scatter2/","page":"Customising overall appearance","title":"Customising overall appearance","text":"sgplot(ds, Scatter(x=:x, y=:y, size=200, outlinecolor=:white,\n                         color=:steelblue, symbol=:square))","category":"page"},{"location":"Plots/Scatter/scatter2/","page":"Customising overall appearance","title":"Customising overall appearance","text":"Pass the clip=false keyword argument to avoid clipping the points in the boundary of the graph. Note that the clip=false can be pass as a global argument. In this case all plots will be drawn with clip=false.","category":"page"},{"location":"Plots/Scatter/scatter2/","page":"Customising overall appearance","title":"Customising overall appearance","text":"sgplot(ds, Scatter(x=:x, y=:y, size=200, outlinecolor=:steelblue,\n                         color=:white, clip=false))","category":"page"},{"location":"Plots/Scatter/scatter2/","page":"Customising overall appearance","title":"Customising overall appearance","text":"User can change the wall color of the graph by passing the global wallcolor option.","category":"page"},{"location":"Plots/Scatter/scatter2/","page":"Customising overall appearance","title":"Customising overall appearance","text":"sgplot(ds, Scatter(x=:x, y=:y, size=200, outlinecolor=:steelblue,\n                         color=:white, clip=false), wallcolor=:lightgray)","category":"page"},{"location":"Plots/Scatter/scatter2/","page":"Customising overall appearance","title":"Customising overall appearance","text":"The grid for each axis can be set within the corresponding axis. This option must be pass to the sgplot function.","category":"page"},{"location":"Plots/Scatter/scatter2/","page":"Customising overall appearance","title":"Customising overall appearance","text":"sgplot(ds, Scatter(x=:x, y=:y, size=200, outlinecolor=:steelblue,\n                         color=:white, clip=false), wallcolor=:lightgray,\n                         xaxis=Axis(grid=true, gridcolor=:white),\n                         yaxis=Axis(grid=true, gridcolor=:white))","category":"page"},{"location":"Plots/Scatter/scatter2/","page":"Customising overall appearance","title":"Customising overall appearance","text":"","category":"page"},{"location":"Plots/Scatter/scatter2/","page":"Customising overall appearance","title":"Customising overall appearance","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"Plots/Reg/reg/#demo_reg","page":"Regression line","title":"Regression line","text":"","category":"section"},{"location":"Plots/Reg/reg/","page":"Regression line","title":"Regression line","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Reg/reg/","page":"Regression line","title":"Regression line","text":"using InMemoryDatasets, StatisticalGraphics, DLMReader","category":"page"},{"location":"Plots/Reg/reg/","page":"Regression line","title":"Regression line","text":"User can use Reg to draw regression lines fitted to data","category":"page"},{"location":"Plots/Reg/reg/","page":"Regression line","title":"Regression line","text":"iris = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"iris.csv\"))\n\nsvg(\"assets/reg1.svg\", sgplot(iris, Reg(x=2,y=1,group=5, clm=true, degree=3), clip=false, wallcolor=:lightgray, xaxis=Axis(grid=true, gridcolor=:white, offset=0), yaxis=Axis(grid=true, gridcolor=:white, offset=0), width=100, height=100, legend=false)) #hide\n\n\nsgplot(iris, Reg(x=:SepalLength, y=:SepalWidth))","category":"page"},{"location":"Plots/Reg/reg/","page":"Regression line","title":"Regression line","text":"Use Scatter to add the scatter plot of data","category":"page"},{"location":"Plots/Reg/reg/","page":"Regression line","title":"Regression line","text":"sgplot(iris, [\n    Reg(x=:SepalLength, y=:SepalWidth),\n    Scatter(x=:SepalLength, y=:SepalWidth)\n    ],\n    clip=false\n)","category":"page"},{"location":"Plots/Reg/reg/","page":"Regression line","title":"Regression line","text":"Passing degree allows to control the degree of polynomial fitted to data","category":"page"},{"location":"Plots/Reg/reg/","page":"Regression line","title":"Regression line","text":"sgplot(iris, [\n    Reg(x=:SepalLength, y=:SepalWidth, degree=3),\n    Scatter(x=:SepalLength, y=:SepalWidth)\n    ],\n    clip=false\n)","category":"page"},{"location":"Plots/Reg/reg/","page":"Regression line","title":"Regression line","text":"clm and cli produce the confidence band (by default 95%) for mean and prediction, respectively","category":"page"},{"location":"Plots/Reg/reg/","page":"Regression line","title":"Regression line","text":"sgplot(iris, [\n    Reg(\n        x=:SepalLength, y=:SepalWidth,\n        degree=3,\n        clm=true,\n        cli=true\n        ),\n    Scatter(x=:SepalLength, y=:SepalWidth)\n    ],\n    clip=false\n)","category":"page"},{"location":"Plots/Reg/reg/","page":"Regression line","title":"Regression line","text":"group is supported","category":"page"},{"location":"Plots/Reg/reg/","page":"Regression line","title":"Regression line","text":"sgplot(iris, [\n    Reg(\n        x=:SepalLength, y=:SepalWidth,\n        degree=3,\n        clm=true,\n        cli=true,\n        group=:Species\n        ),\n    Scatter(x=:SepalLength, y=:SepalWidth)\n    ],\n    clip=false\n)","category":"page"},{"location":"Plots/Reg/reg/","page":"Regression line","title":"Regression line","text":"","category":"page"},{"location":"Plots/Reg/reg/","page":"Regression line","title":"Regression line","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"lib/Plots/","page":"Plots","title":"Plots","text":"Band\nBar\nBoxPlot\nBubble\nDensity\nHeatmap\nHistogram\nLine\nPie\nPolygon\nRefLine\nReg\nScatter\nSegment\nTextPlot\nViolin","category":"page"},{"location":"lib/Plots/#StatisticalGraphics.Band","page":"Plots","title":"StatisticalGraphics.Band","text":"Band(args...)\n\nRepresent a Band plot with given arguments.\n\nKeyword arguments\n\nRequired\n\nlower: The lower values for the band plot. User can pass a column or a Float value. default: 0\nupper: The upper values for the band plot. User can pass a column or a Float value. default: 0\nx: The column to be used as x coordinate. User must pass either this or the y argument. default: 0\ny: The column to be used as y coordinate. User must pass either this or the x argument. default: 0\n\nBand Options\n\nbreaks: It causes a break in the line when a missing value is encountered. default: false\ninterpolate: The interplate function to use for drawing lines, e.g. :linear, :basis, :natural, :step, ... default: :linear\n\nGrouping\n\ngroup: The name of column for grouping observation. Each group of observations will create seperate band plot. \n\nBand appearance\n\ncolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"), or pass a gradient color using the gradient() function. default: \"#4682b4\"\nopacity: The mark opacity from 0 (transparent) to 1 (opaque). default: 0.5\n\nAxes options\n\nx2axis: When set to true, the top x-axis will be used for the current plot. default: false\ny2axis: When set to true, the right y-axis will be used for the current plot. default: false\n\nLegend\n\nlegend: User can pass a symbol to this keyword argument to indicate that more customisation will be passed for the legened of corresponding mark. User needs to provide the extra customisation via the Legend global keyword. \n\nMiscellaneous\n\nclip: Indicates if the marks should be clipped. \n\n\n\n\n\n","category":"type"},{"location":"lib/Plots/#StatisticalGraphics.Bar","page":"Plots","title":"StatisticalGraphics.Bar","text":"Bar(args...)\n\nRepresent a Bar chart with given arguments.\n\nKeyword arguments\n\nRequired\n\nx: User should pass a single column for plotting the bar chart. User must pass either this or the y argument. default: 0\ny: User should pass a single column for plotting the bar chart. User must pass either this or the x argument. default: 0\n\nBar options\n\nbaseline: The start value for drawing bars. default: 0\nbaselineresponse: Name/index of a numeric column which will be used to change the baseline of bars within each group. The function passed to baselinestat will be used to aggregate the values if there are more than one observation for a specific bar. \nbaselinestat: The function that will be used to aggregate values in column passed as baselineresponse. \ncolormodel: It specifies the color scheme to use for the marks. default: :diverging\ncolorresponse: Name/index of a numeric column which will be used to change the fill color of each bar based on its values. The function passed to colorstat will be used to aggregate the values if there are more than one observation for a specific bar. \ncolorstat: The function that will be used to aggregate values in column passed as colorresponse. \nmissingmode: Indicate how to handle missing values in category or group.  0 = nothing, 1 = no missing in category, 2 = no missing in group, 3 = no missing in category or group, 4 = no missing in category and group. default: 0\nnormalize: If true the bars will be normalized in each group. By default the total bar heights will be 1 in each group, however, user can pass customised function via normalizer to change this behaviour. default: false\nnormalizer: This function will be used to normalize bar height within each group. default: StatisticalGraphics.bar_normalizer\norderresponse: Name of a numeric column which will be used to change the order of bars. The function passed to orderstat will be used to aggregate the values if there are more than one observation for a specific bar. Note that the axis' order will override this. \norderstat: The function that will be used to aggregate values in column passed as orderresponse. \nresponse: A numeric column which its aggregated values based on the stat keyword argument will be used to determine the height of each bar. \nstat: A function for aggregating the response keyword argument. When response is passed the default value of the keword change to IMD.sum, however, user can pass any function to this argument. The function must accept two arguments f(format), and x the input values and return the aggregated values. \n\nGrouping\n\ngroup: A grouped bar chart will be created by passing a single column to this argument. \ngroupdisplay: Indicate how to display bars in each group. It can be :stack, :cluster, :step, or :none. default: :stack\ngrouporder: How to order values in each group. It can be :data, :ascending, or :descending. User may also pass a vector of group levels to dictate the orders. default: :ascending\ngroupspace: The space between bars inside each group when groupdisplay is in (:cluster, :step). default: 0.05\n\nBar appearance\n\nbarcorner: Corner radius for bars. (cornerRadiusTopLeft, cornerRadiusTopRight, cornerRadiusBottomLeft, cornerRadiusBottomRight). default: 0\nbarwidth: The bar width proportion with respect to the available space. It can be any number between 0 and 1. User can pass :nest too, which in this case the bar width will be automatically calculated for each group in such a way that the bar widths in each group will be smaller than the previous group. Users can pass nestfactor to control how fast they would like the bar width change for each group. default: 1\ncolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"), or pass a gradient color using the gradient() function. default: \"#4682b4\"\nnestfactor: When the barwidth keyword is set to :nest this will control how much change should be applied to the current group barwidth compared to the previous one. By default this will be controlled automatically. \nopacity: The mark opacity from 0 (transparent) to 1 (opaque). default: 1\noutlinecolor: The mark's outline color. default: :white\noutlinethickness: The mark outline thickness. default: 1\nspace: The space between bars. It can be any number between 0 and 1.  default: 0.1\n\nBar labels\n\nlabel: What information should be used for bar labels. It can be :none, :height, or :category. default: :none\nlabelalign: The text alignment. \nlabelalternate: Use automatic alogirhtms to adjust the labels for bar with negative heights. default: true\nlabelangle: The text angle. \nlabelbaseline: The text baseline. \nlabelcolor: The text color. User can also pass :group or :colorresponse to use the corresponding scale for coloring the text. default: :black\nlabeld3format: d3 format for labels. default: \"\"\nlabeldir: The direction of the text, i.e. :ltr or :rtl. default: :ltr\nlabelfont: The font name for displaying text. \nlabelfontweight: The font weight for displaying text, use 100 for thin font and 900 for the bold one. \nlabelitalic: If true the italic style will be used for displaying text. \nlabellimit: The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit. \nlabelloc: relative location of the label within each bar. It can be any number between 0 and 1, where 0.5 means middle of the bar. default: 0.5\nlabeloffset: The amount in pixel to offset the labels. default: 0\nlabelopacity: The text opacity. default: 1\nlabelpos: The position of labels within each bar. It can be :end, :start, or :middle. default: :end\nlabelsize: The font size for displaying text. \ntooltip: A tooltip will be shown upon mouse hover. default: false\n\nAxes options\n\nx2axis: When set to true, the top x-axis will be used for the current plot. default: false\ny2axis: When set to true, the right y-axis will be used for the current plot. default: false\n\nLegend\n\nlegend: User can pass a symbol to this keyword argument to indicate that more customisation will be passed for the legened of corresponding mark. User needs to provide the extra customisation via the Legend global keyword. \n\nMiscellaneous\n\nclip: Indicates if the marks should be clipped. \n\n\n\n\n\n","category":"type"},{"location":"lib/Plots/#StatisticalGraphics.BoxPlot","page":"Plots","title":"StatisticalGraphics.BoxPlot","text":"BoxPlot(args...)\n\nRepresent a Box Plot with given arguments.\n\nKeyword arguments\n\nRequired\n\nx: User should pass multiple columns for plotting the comparative box plot, i.e. side by side box plot for passed columns. User must pass either this or the y argument. default: 0\ny: User should pass multiple columns for plotting the comparative box plot, i.e. side by side box plot for passed columns. User must pass either this or the x argument. default: 0\n\nBoxPlot options\n\ncategoryorder: How the category should be ordered, i.e. :ascending, :descending, :data. default: :ascending\nmissingmode: Indicate how to handle missing values in category or group.  0 = nothing, 1 = no missing in category. default: 0\noutliers: If true the oultliers will be shown. The outliers are computed based on how many outliersfactor they are far from quartiles. default: false\noutliersfactor: The factor to be used for computing outliers. default: 1.5\n\nGrouping\n\ncategory: A category column which indicates the box plot must be drawn within each category. \n\nBoxPlot appearance\n\nboxcorner: Corner radius for boxes. (cornerRadiusTopLeft, cornerRadiusTopRight, cornerRadiusBottomLeft, cornerRadiusBottomRight). default: 0\nboxwidth: The box width, it must be a number between 0 and 1. default: 1\nfencecolor: Specifiy the color for the fence lines. default: :black\nfencewidth: Specifiy the total width for the fence lines. It must be a number between 0 and 1. default: 0.5\ngroupspace: The space between boxes inside each category. It must be a number between 0 and 1. default: 0.05\nmeansymbol: Specifiy the symbol to be used for the mean indicator. default: :diamond\nmeansymbolsize: Specifiy the symbol size to be used for the mean indicator. default: 40\nmediancolor: Specifiy the color for the median indicator. default: :white\nmedianthickness: Specifiy the thickness for the median indicator. default: 1\nmedianwidth: The total width to be used for the median indicator. It must be a number between 0 and 1. default: 1\nopacity: The mark opacity from 0 (transparent) to 1 (opaque). default: 1\noutlinecolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"). default: :white\noutlinethickness: The mark outline thickness. default: 1\nspace: The space between boxes. It must be a number between 0 and 1. default: 0.1\nwhiskercolor: Specifiy the color for the whisker lines. default: :black\nwhiskerdash: Specifiy the dash style for the whisker lines. default: [3, 3]\nwhiskerthickness: Specifiy the thickness for the whisker lines. default: 1\n\nOutliers appearance\n\noutliercolor: Specifiy the color for the outliers symobls. \noutlierjitter: Specifiy the jitter strength for the outliers symobls. default: 0\noutlieropacity: Specifiy the mark opacity for the outliers symobls. default: 1\noutlieroutlinecolor: Specifiy the outline color for the outliers symobls. \noutliersymbol: Specifiy the symbol shape for the outliers symobls. default: :circle\noutliersymbolsize: Specifiy the symbol size for the outliers symobls. default: 30\noutlierthickness: Specifiy the outline thickness for the outliers symobls. default: 1\n\nBoxPlot tooltip\n\ntooltip: A tooltip will be shown upon mouse hover. default: false\n\nAxes options\n\nx2axis: When set to true, the top x-axis will be used for the current plot. default: false\ny2axis: When set to true, the right y-axis will be used for the current plot. default: false\n\nLegend\n\nlegend: User can pass a symbol to this keyword argument to indicate that more customisation will be passed for the legened of corresponding mark. User needs to provide the extra customisation via the Legend global keyword. \n\nMiscellaneous\n\nclip: Indicates if the marks should be clipped. \n\n\n\n\n\n","category":"type"},{"location":"lib/Plots/#StatisticalGraphics.Bubble","page":"Plots","title":"StatisticalGraphics.Bubble","text":"Bubble(args...)\n\nRepresent a Bubble plot with given arguments.\n\nKeyword arguments\n\nRequired\n\nx: The column to be used as x coordinate. default: 0\ny: The column to be used as y coordinate. default: 0\n\nBubble Options\n\ncolorresponse: The column which its values will be used to determine the fill color of the marks. \nmaxsize: The maximum size of the bubbles. \nminsize: The minimum size of the bubbles. \nopacityresponse: The column which its values will be used to determine the opacity of the marks. \n\nGrouping\n\ngroup: The name of column for grouping observation. Each group of observations will create seperate bubble plot. \n\nBubble appearance\n\ncolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"). \ncolormodel: It specifies the color scheme to use for the marks. default: :diverging\nopacity: The mark opacity from 0 (transparent) to 1 (opaque). default: 1\noutlinecolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"). \nsize: The symbol size. default: 50\nthickness: The mark outline thickness. default: 1\n\nBubble Label\n\nlabelalgorithm: The algorithm for placing labels. default: :naive\nlabelanchor: The anchors for choosing the location of labels. default: [:top, :bottom, :left, :right]\nlabelangle: The text angle. default: 0\nlabelcolor: The label text color, it can also be :group or :colorresponse for choosing the color based on the points groups. default: :black\nlabeldir: The direction of the text, i.e. :ltr or :rtl. default: :ltr\nlabelfont: The font name for displaying text. \nlabelfontweight: The font weight for displaying text, use 100 for thin font and 900 for the bold one. \nlabelitalic: If true the italic style will be used for displaying text. \nlabellimit: The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit. \nlabelresponse: The column which its values will be used to label points. \nlabelsize: The font size for displaying text. \ntooltip: A tooltip will be shown upon mouse hover. default: false\n\nAxes options\n\nx2axis: When set to true, the top x-axis will be used for the current plot. default: false\nxshift: Shift the mark in direction of x. Useful for discrete type axes. default: 0\ny2axis: When set to true, the right y-axis will be used for the current plot. default: false\nyshift: Shift the mark in direction of y. Useful for discrete type axes. default: 0\n\nLegend\n\nlegend: User can pass a symbol to this keyword argument to indicate that more customisation will be passed for the legened of corresponding mark. User needs to provide the extra customisation via the Legend global keyword. \n\nMiscellaneous\n\nclip: Indicates if the marks should be clipped. \n\n\n\n\n\n","category":"type"},{"location":"lib/Plots/#StatisticalGraphics.Density","page":"Plots","title":"StatisticalGraphics.Density","text":"Density(args...)\n\nRepresent a Density plot with given arguments.\n\nKeyword arguments\n\nRequired\n\nx: The column to be used as x coordinate. User must pass either this or the y argument. default: 0\ny: The column to be used as y coordinate. User must pass either this or the x argument. default: 0\n\nDensity Options\n\nbaseline: The baseline for filling the curve. default: 0.0\nbw: Band width to be used in the kernel density estimation. \ninterpolate: The interplate function to use for drawing lines, e.g. :linear, :basis, :natural, :step, ... default: :linear\nnpoints: The number of points for the grid calculation. default: 100\nscale: user can pass any function to this option, the function must be in the form of fun(density; midpoints, npoints, samplesize, binwidth) , for :pdf the function is defined as f(x; args...) = x, for :count we compute the expected counts, f(x; args...) = x .* binwidth .* npoints , and for :cdf the function is (x; binwidth, args...) -> cumsum(x .* binwidth). default: :pdf\ntype: Type of density fit, i.e. :normal or :kernel.  default: :normal\nweights: The weighting function to be used when :kernel type is selected. default: :gaussian\n\nGrouping\n\ngroup: The name of column for grouping observation. Each group of observations will create seperate density plot. \n\nDensity appearance\n\ncolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"), or pass a gradient color using the gradient() function. \nfillcolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"), or pass a gradient color using the gradient() function. \nfilled: Indicate if the curve should be filled. default: true\nfillopacity: The opacity value for the fill color. default: 0.5\nopacity: The opacity value for the outline. default: 1\nthickness: The mark outline thickness. default: 1\n\nAxes options\n\nx2axis: When set to true, the top x-axis will be used for the current plot. default: false\ny2axis: When set to true, the right y-axis will be used for the current plot. default: false\n\nLegend\n\nlegend: User can pass a symbol to this keyword argument to indicate that more customisation will be passed for the legened of corresponding mark. User needs to provide the extra customisation via the Legend global keyword. \n\nMiscellaneous\n\nclip: Indicates if the marks should be clipped. \n\n\n\n\n\n","category":"type"},{"location":"lib/Plots/#StatisticalGraphics.Heatmap","page":"Plots","title":"StatisticalGraphics.Heatmap","text":"Heatmap(args...)\n\nRepresent a Heatmap (2D Histogram) with given arguments.\n\nKeyword arguments\n\nRequired\n\nx: The column to be used as x coordinate. User must pass this and the y argument. default: 0\ny: The column to be used as y coordinate. User must pass this and the x argument. default: 0\n\nHeatmap Options\n\nbincountmethod: The number of points for the grid calculation in both direction. default: StatisticalGraphics.default_bin_heatmap\ntooltip: A tooltip will be shown upon mouse hover. default: false\nxbincount: The number of points for the grid calculation in x direction. \nybincount: The number of points for the grid calculation in y direction. \n\nHeatmap appearance\n\ncolormodel: Define the color model to be used for the heatmap plot. default: :scheme => :viridis\nopacity: The opacity value for the outline. default: 1\n\nAxes options\n\nx2axis: When set to true, the top x-axis will be used for the current plot. default: false\ny2axis: When set to true, the right y-axis will be used for the current plot. default: false\n\nLegend\n\nlegend: User can pass a symbol to this keyword argument to indicate that more customisation will be passed for the legened of corresponding mark. User needs to provide the extra customisation via the Legend global keyword. \n\nMiscellaneous\n\nclip: Indicates if the marks should be clipped. \n\n\n\n\n\n","category":"type"},{"location":"lib/Plots/#StatisticalGraphics.Histogram","page":"Plots","title":"StatisticalGraphics.Histogram","text":"Histogram(args...)\n\nRepresent a Histogram with given arguments.\n\nKeyword arguments\n\nRequired\n\nx: The column to be used as x coordinate. User must pass either this or the y argument. default: 0\ny: The column to be used as y coordinate. User must pass either this or the x argument. default: 0\n\nHistogram Options\n\nmidpoints: The location of midpoints. It can be a number to indicate the number of midpoints or a vector of midpoints. default: :Sturges\nscale: The scale to use for the bar heights, e.g. :pdf, :cdf, :count. default: :pdf\n\nGrouping\n\ngroup: The name of column for grouping observation. Each group of observations will create seperate histogram plot. \n\nHistogram appearance\n\ncolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"), or pass a gradient color using the gradient() function. default: \"#4682b4\"\nopacity: The opacity value for the outline. default: 1\noutlinecolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"), or pass a gradient color using the gradient() function. default: :white\noutlinethickness: The outline thickness. default: 1\nspace: Space between bars in pixel. default: 1\n\nAxes options\n\nx2axis: When set to true, the top x-axis will be used for the current plot. default: false\ny2axis: When set to true, the right y-axis will be used for the current plot. default: false\n\nLegend\n\nlegend: User can pass a symbol to this keyword argument to indicate that more customisation will be passed for the legened of corresponding mark. User needs to provide the extra customisation via the Legend global keyword. \n\nMiscellaneous\n\nclip: Indicates if the marks should be clipped. \n\n\n\n\n\n","category":"type"},{"location":"lib/Plots/#StatisticalGraphics.Line","page":"Plots","title":"StatisticalGraphics.Line","text":"Line(args...)\n\nRepresent a Line plot with given arguments.\n\nKeyword arguments\n\nRequired\n\nx: The column to be used as x coordinate. default: 0\ny: The column to be used as y coordinate. default: 0\n\nLine Options\n\nbreaks: It causes a break in the line when a missing value is encountered. default: false\ninterpolate: The interplate function to use for drawing lines, e.g. :linear, :basis, :natural, :step, ... default: :linear\n\nGrouping\n\ngroup: The name of column for grouping observation. Each group of observations will create seperate Line. \n\nLine appearance\n\ncolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"), or pass a gradient color using the gradient() function. default: \"#4682b4\"\ndash: The Line dash style. default: [0]\nopacity: The mark opacity from 0 (transparent) to 1 (opaque). default: 1\nthickness: The Line thickness. default: 1\n\nAxes options\n\nx2axis: When set to true, the top x-axis will be used for the current plot. default: false\nxshift: Shift the mark in direction of x. Useful for discrete type axes. default: 0\ny2axis: When set to true, the right y-axis will be used for the current plot. default: false\nyshift: Shift the mark in direction of y. Useful for discrete type axes. default: 0\n\nLegend\n\nlegend: User can pass a symbol to this keyword argument to indicate that more customisation will be passed for the legened of corresponding mark. User needs to provide the extra customisation via the Legend global keyword. \n\nMiscellaneous\n\nclip: Indicates if the marks should be clipped. \n\n\n\n\n\n","category":"type"},{"location":"lib/Plots/#StatisticalGraphics.Pie","page":"Plots","title":"StatisticalGraphics.Pie","text":"Pie(args...)\n\nRepresent a Pie chart with given arguments.\n\nKeyword arguments\n\nRequired\n\ncategory: A category column which indicates each slice. default: 0\n\nPie options\n\nendangle: The end angle in degree. default: 360\nmissingmode: Indicate how to handle missing values in category or group.  0 = nothing, 1 = no missing in category, 2 = no missing in group, 3 = no missing in category or group, 4 = no missing in category and group. default: 0\nresponse: A numeric column which its aggregated values based on the stat keyword argument will be used to determine the radius of each slice. \nsort: If true the slices will be sorted based on their total angle. default: false\nstartangle: The start angle in degree. default: 0\nstat: A function for aggregating the response keyword argument. When response is passed the default value of the keword change to IMD.sum, however, user can pass any function to this argument. The function must accept two arguments f(format), and x the input values and return the aggregated values. \n\nGrouping\n\ngroup: A nested pie chart will be created by passing a single column to this argument. \ngroupspace: The space between nested pie. default: 0.01\n\nPie appearance\n\ncolormodel: It specifies the color scheme to use for the marks. default: :category\ninnerradius: The donut radius. It must be a number between 0 and 1. default: 0\nopacity: The mark opacity from 0 (transparent) to 1 (opaque). default: 1\nouterradius: The outer radius. It must be a number between 0 and 1. default: 1\noutlinecolor: The mark's outline color. default: :white\noutlinethickness: The mark outline thickness. default: 1\npiecorner: The corner of slice in pixel. default: 0\nspace: The space between slices. It can be any number between 0 and 1.  default: 0\n\nPie labels\n\ndecimal: Numbe of digits after the decimal when percentage is used. default: 1\nlabel: What information should be used for slice labels. It can be :category, :percent, or :both. \nlabelalign: The text alignment. default: :center\nlabelangle: The text angle. \nlabelbaseline: The text baseline. default: :middle\nlabelcolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"). default: :black\nlabeldir: The direction of the text, i.e. :ltr or :rtl. default: :ltr\nlabelfont: The font name for displaying text. \nlabelfontweight: The font weight for displaying text, use 100 for thin font and 900 for the bold one. \nlabelitalic: If true the italic style will be used for displaying text. \nlabellimit: The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit. \nlabelopacity: The text opacity. default: 1\nlabelpos: Vertical position of lables. default: 0.5\nlabelrotate: It rotates text 90 degree. default: false\nlabelsize: The font size for displaying text. \nlabelthreshold: Labels will be drop for the slices with smaller angle than :labelthreshold. default: 0.0\ntooltip: A tooltip will be shown upon mouse hover. default: false\n\nLegend\n\nlegend: User can pass a symbol to this keyword argument to indicate that more customisation will be passed for the legened of corresponding mark. User needs to provide the extra customisation via the Legend global keyword. \n\nMiscellaneous\n\nclip: Indicates if the marks should be clipped. \n\n\n\n\n\n","category":"type"},{"location":"lib/Plots/#StatisticalGraphics.Polygon","page":"Plots","title":"StatisticalGraphics.Polygon","text":"Polygon(args...)\n\nRepresent a Polygon with given arguments.\n\nKeyword arguments\n\nRequired\n\nid: The function draw a seperate polygon for each unique value of id. \nx: The x coordinate of the polygon. \ny: The y coordinate of the polygon. \n\nPolygon Options\n\ncolorresponse: The column which its values will be used to determine the fill color of polygons. \ninterpolate: The interplate function to use for drawing lines, e.g. :linear, :basis, :natural, :step, ... default: :linear\nopacityresponse: The column which its values will be used to determine the opacity of polygons. \noutline: If true an outline will be drawn for each polygon. default: true\n\nGrouping\n\ngroup: The name of column for grouping observation. Each group of observations will create seperate polygon and polygons in each group will have different color. \n\nPolygon appearance\n\ncolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"), or pass a gradient color using the gradient() function. default: :steelblue\ncolormodel: The color model which will be used for fill color when colorresponse is passed. It can be an scheme or a vector of colors. default: :diverging\nopacity: The mark opacity from 0 (transparent) to 1 (opaque). default: 1\noutlinecolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"), or pass a gradient color using the gradient() function. default: :steelblue\noutlinedash: The outline dash style. default: [0]\noutlineopacity: The ouline opacity. default: 1\noutlinethickness: The outline thickness. default: 1\n\nAxes options\n\nx2axis: When set to true, the top x-axis will be used for the current plot. default: false\ny2axis: When set to true, the right y-axis will be used for the current plot. default: false\n\nLegend\n\nlegend: User can pass a symbol to this keyword argument to indicate that more customisation will be passed for the legened of corresponding mark. User needs to provide the extra customisation via the Legend global keyword. \n\nMiscellaneous\n\nclip: Indicates if the marks should be clipped. \n\n\n\n\n\n","category":"type"},{"location":"lib/Plots/#StatisticalGraphics.RefLine","page":"Plots","title":"StatisticalGraphics.RefLine","text":"RefLine(args...)\n\nRepresent a Refline with given arguments.\n\nKeyword arguments\n\nRequired\n\naxis: WHich axis should be used to draw the reflines, i.e. :xaxis, :x2axis, :yaxis, :y2axis. \nvalues: The position of reflines, it can be a vector of values. default: 0\n\nRefline appearance\n\ncolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"), or pass a gradient color using the gradient() function. default: :grey\ndash: The line dash style. default: [0]\nopacity: The mark opacity from 0 (transparent) to 1 (opaque). default: 1\nthickness: The line thickness. default: 1\n\nMiscellaneous\n\nclip: Indicates if the marks should be clipped. \n\n\n\n\n\n","category":"type"},{"location":"lib/Plots/#StatisticalGraphics.Reg","page":"Plots","title":"StatisticalGraphics.Reg","text":"Reg(args...)\n\nRepresent a Regression Line with given arguments.\n\nKeyword arguments\n\nRequired\n\nx: The column to be used as x, i.e. the independent variable. default: 0\ny: The column to be used as y, i.e. the response variable. default: 0\n\nReg Options\n\ndegree: The maximum polynomial degree for the fitted line. default: 1\nintercept: Whether the fitted line should have the intercept term. default: true\ninterpolate: The interplate function to use for drawing lines, e.g. :linear, :basis, :natural, :step, ... default: :linear\nnpoints: The number of points in grid for drawing the regression line. default: 100\n\nGrouping\n\ngroup: The name of column for grouping observation. Each group of observations will create seperate Regression Line. \n\nReg appearance\n\ncolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"), or pass a gradient color using the gradient() function. default: \"#4682b4\"\ndash: The Line dash style. default: [0]\nopacity: The mark opacity from 0 (transparent) to 1 (opaque). default: 1\nthickness: The Line thickness. default: 1\n\nConfidence Interval\n\nalpha: Control the confidence intervals level. default: 0.05\ncli: Draw the prediction confidence interval. default: false\nclicolor: The filling color for the prediction confidence interval. \ncliopacity: The opacity for the prediction confidence interval. default: 0.3\nclm: Draw the mean confidence interval. default: false\nclmcolor: The filling color for the mean confidence interval. \nclmopacity: The opacity for the mean confidence interval. default: 0.3\n\nAxes options\n\nx2axis: When set to true, the top x-axis will be used for the current plot. default: false\ny2axis: When set to true, the right y-axis will be used for the current plot. default: false\n\nLegend\n\nlegend: User can pass a symbol to this keyword argument to indicate that more customisation will be passed for the legened of corresponding mark. User needs to provide the extra customisation via the Legend global keyword. \n\nMiscellaneous\n\nclip: Indicates if the marks should be clipped. \n\n\n\n\n\n","category":"type"},{"location":"lib/Plots/#StatisticalGraphics.Scatter","page":"Plots","title":"StatisticalGraphics.Scatter","text":"Scatter(args...)\n\nRepresent a Scatter plot with given arguments.\n\nKeyword arguments\n\nRequired\n\nx: The column to be used as x coordinate. default: 0\ny: The column to be used as y coordinate. default: 0\n\nScatter Options\n\nangleresponse: The column which its values will be used to determine the angle of the marks. \ncolorresponse: The column which its values will be used to determine the fill color of the marks. \njitter: The jitter strength in the x and y axes direction, respectively. default: [0, 0]\nopacityresponse: The column which its values will be used to determine the opacity of the marks. \nsymbolresponse: The column which its values will be used to determine the symbol of the marks. \n\nGrouping\n\ngroup: The name of column for grouping observation. Each group of observations will create seperate scatter plot. \n\nScatter appearance\n\nangle: The symbol angle. default: 0\ncolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"). \ncolormodel: It specifies the color scheme to use for the marks. default: :diverging\nopacity: The mark opacity from 0 (transparent) to 1 (opaque). default: 1\noutlinecolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"). \nsize: The symbol size. default: 50\nsymbol: The symbol type, e.g. :circle, :square, ... default: \"circle\"\nthickness: The mark outline thickness. default: 1\n\nScatter Label\n\nlabelalgorithm: The algorithm for placing labels. default: :naive\nlabelanchor: The anchors for choosing the location of labels. default: [:top, :bottom, :left, :right]\nlabelangle: The text angle. default: 0\nlabelcolor: The label text color, it can also be :group or :colorresponse for choosing the color based on the points groups. default: :black\nlabeldir: The direction of the text, i.e. :ltr or :rtl. default: :ltr\nlabelfont: The font name for displaying text. \nlabelfontweight: The font weight for displaying text, use 100 for thin font and 900 for the bold one. \nlabelitalic: If true the italic style will be used for displaying text. \nlabellimit: The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit. \nlabelresponse: The column which its values will be used to label points. \nlabelsize: The font size for displaying text. \ntooltip: A tooltip will be shown upon mouse hover. default: false\n\nAxes options\n\nx2axis: When set to true, the top x-axis will be used for the current plot. default: false\nxshift: Shift the mark in direction of x. Useful for discrete type axes. default: 0\ny2axis: When set to true, the right y-axis will be used for the current plot. default: false\nyshift: Shift the mark in direction of y. Useful for discrete type axes. default: 0\n\nLegend\n\nlegend: User can pass a symbol to this keyword argument to indicate that more customisation will be passed for the legened of corresponding mark. User needs to provide the extra customisation via the Legend global keyword. \n\nMiscellaneous\n\nclip: Indicates if the marks should be clipped. \n\n\n\n\n\n","category":"type"},{"location":"lib/Plots/#StatisticalGraphics.Segment","page":"Plots","title":"StatisticalGraphics.Segment","text":"Segment(args...)\n\nRepresent a Segment line with given arguments.\n\nKeyword arguments\n\nRequired\n\nlower: The lower values for segments. User can pass a column or a Float value. default: 0\nupper: The upper values for segments. User can pass a column or a Float value. default: 0\nx: The column to be used as x coordinate. User must pass either this or the y argument. default: 0\ny: The column to be used as y coordinate. User must pass either this or the x argument. default: 0\n\nGrouping\n\ngroup: The name of column for grouping observation. Each group of observations will create seperate segment lines. \n\nSegment appearance\n\ncolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"), or pass a gradient color using the gradient() function. default: \"#4682b4\"\nopacity: The mark opacity from 0 (transparent) to 1 (opaque). default: 1\nthickness: The thickness of the mark default: 1\n\nAxes options\n\nx2axis: When set to true, the top x-axis will be used for the current plot. default: false\ny2axis: When set to true, the right y-axis will be used for the current plot. default: false\n\nLegend\n\nlegend: User can pass a symbol to this keyword argument to indicate that more customisation will be passed for the legened of corresponding mark. User needs to provide the extra customisation via the Legend global keyword. \n\nMiscellaneous\n\nclip: Indicates if the marks should be clipped. \n\n\n\n\n\n","category":"type"},{"location":"lib/Plots/#StatisticalGraphics.TextPlot","page":"Plots","title":"StatisticalGraphics.TextPlot","text":"TextPlot(args...)\n\nRepresent a Text plot with given arguments.\n\nKeyword arguments\n\nRequired\n\ntext: The column to be used as text values for each point. \nx: The column to be used as x coordinate. \ny: The column to be used as y coordinate. \n\nTextPlot Options\n\nangleresponse: The column which its values will be used to determine the angle of text. \ncolorresponse: The column which its values will be used to determine the color of text. \nopacityresponse: The column which its values will be used to determine the opacity of text. \n\nGrouping\n\ngroup: The name of column for grouping observation. Each group of observations will create seperate text plot. \n\nTextPlot appearance\n\nalign: The text alignment. default: :left\nangle: The text angle. default: 0\ncolor: The text color. default: :black\ncolormodel: It specifies the color scheme to use for the marks. default: :diverging\ndir: The direction of the text, i.e. :ltr or :rtl. default: :ltr\nfont: The font name for displaying text. \nfontweight: The font weight for displaying text, use 100 for thin font and 900 for the bold one. \nitalic: If true the italic style will be used for displaying text. \nlimit: The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit. \nopacity: The mark opacity from 0 (transparent) to 1 (opaque). default: 1\nsize: The font size for displaying text. default: 10\ntextbaseline: The text baseline. default: :alphabetic\n\nAxes options\n\nx2axis: When set to true, the top x-axis will be used for the current plot. default: false\ny2axis: When set to true, the right y-axis will be used for the current plot. default: false\n\nLegend\n\nlegend: User can pass a symbol to this keyword argument to indicate that more customisation will be passed for the legened of corresponding mark. User needs to provide the extra customisation via the Legend global keyword. \n\nMiscellaneous\n\nclip: Indicates if the marks should be clipped. \n\n\n\n\n\n","category":"type"},{"location":"lib/Plots/#StatisticalGraphics.Violin","page":"Plots","title":"StatisticalGraphics.Violin","text":"Violin(args...)\n\nRepresent a Violin Plot with given arguments.\n\nKeyword arguments\n\nRequired\n\nx: User should pass multiple columns for plotting the comparative violin plot, i.e. side by side violin plot for passed columns. User must pass either this or the y argument. default: 0\ny: User should pass multiple columns for plotting the comparative violin plot, i.e. side by side violin plot for passed columns. User must pass either this or the x argument. default: 0\n\nViolin options\n\nbw: The kernel bandwidth. \ncategoryorder: How the category should be ordered, i.e. :ascending, :descending, :data. default: :ascending\ninterpolate: The line interpolation algorithm for drawing the density line. default: :linear\nmissingmode: Indicate how to handle missing values in category or group.  0 = nothing, 1 = no missing in category. default: 0\nnpoints: The number of points for drawing the density line. default: 100\nscale: The scale to be used for density estimation, see Density. default: StatisticalGraphics.violin_default_scale\nweights: The kernel weight function. default: :gaussian\n\nGrouping\n\ncategory: A category column which indicates the violin plot must be drawn within each category. \n\nViolin appearance\n\ncolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"), or pass a gradient color using the gradient() function. \nfilled: Specifiy the plot should be filled with color. default: true\nfillopacity: Specifiy The fill opacity of the plot. default: 0.5\ngroupspace: The space between violins inside each category. It must be a number between 0 and 1. default: 0.05\nopacity: Specifiy The opacity of the density line. default: 1\nside: Specifiy which half of the violin plot should be plotted, i.e. :right(:bottom), :left(:top). default: :both\nspace: The space between violins. It must be a number between 0 and 1. default: 0.1\nthickness: Specifiy The thickness of the outline line. default: 1\n\nAxes options\n\nx2axis: When set to true, the top x-axis will be used for the current plot. default: false\ny2axis: When set to true, the right y-axis will be used for the current plot. default: false\n\nLegend\n\nlegend: User can pass a symbol to this keyword argument to indicate that more customisation will be passed for the legened of corresponding mark. User needs to provide the extra customisation via the Legend global keyword. \n\nMiscellaneous\n\nclip: Indicates if the marks should be clipped. \n\n\n\n\n\n","category":"type"},{"location":"Plots/Polygon/polygon/#demo_polygon_plot1","page":"Polygon","title":"Polygon","text":"","category":"section"},{"location":"Plots/Polygon/polygon/","page":"Polygon","title":"Polygon","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Polygon/polygon/","page":"Polygon","title":"Polygon","text":"using InMemoryDatasets, StatisticalGraphics, Chain\n\nds=Dataset(x=[0,0,2,2,4,4,6,6,4,4,2,2,7,7,9,9], y=[0,10,10,6,6,10,10,0,0,4,4,0,0,10,10,0], id=[fill(1,12);fill(2,4)]) #hide\n\nsvg(\"assets/polygon1.svg\", sgplot(ds, Polygon(x=:x, y=:y, id=:id, opacity=0.5), width=100, height=100, xaxis=Axis(offset=0, padding=10, grid=true), yaxis=Axis(offset=0, padding=10, grid=true))) #hide","category":"page"},{"location":"Plots/Polygon/polygon/","page":"Polygon","title":"Polygon","text":"Polygon can be used to draw polygons. Each polygon is represented by xy-coordinates and its id. sgplot produces a seperate polygon for each id.","category":"page"},{"location":"Plots/Polygon/polygon/","page":"Polygon","title":"Polygon","text":"ds=Dataset(\n            x=[0,0,2,2,4,4,6,6,4,4,2,2,7,7,9,9],\n            y=[0,10,10,6,6,10,10,0,0,4,4,0,0,10,10,0],\n            id=[fill(1,12);fill(2,4)]\n        )\n\nsgplot(ds,\n        Polygon(x=:x, y=:y, id=:id, opacity=0.5),\n        xaxis=Axis(padding=10),\n        yaxis=Axis(padding=10)\n)","category":"page"},{"location":"Plots/Polygon/polygon/","page":"Polygon","title":"Polygon","text":"Users can pass colorresponse or group for colorful drawings","category":"page"},{"location":"Plots/Polygon/polygon/","page":"Polygon","title":"Polygon","text":"ds = Dataset(id = repeat(1:10, 3), x = rand(30), y=rand(30))\n\nsgplot(ds, Polygon(x=:x, y=:y, id=:id, colorresponse=:id, opacity=0.7))","category":"page"},{"location":"Plots/Polygon/polygon/","page":"Polygon","title":"Polygon","text":"Polygon can be customised by other keywords,","category":"page"},{"location":"Plots/Polygon/polygon/","page":"Polygon","title":"Polygon","text":"triangle(a, mul=[1,1,1]) = [(0.0, 0.0) .*\n                            mul[1], (sqrt(2 * a^2 - 2 * a^2 * cos(a)), 0.0) .* mul[2],\n                            ((a^2 - a^2 * cos(a)) / sqrt(\n                            2 * a^2 - 2 * a^2 * cos(a)),\n                            (a^2 * sin(a)) / sqrt(2 * a^2 - 2 * a^2 * cos(a))) .* mul[3]\n                            ]\n\nds = Dataset(x=range(0.01, 3, step=0.091))\n\n@chain ds begin\n  modify!(\n            :x => byrow(x->x/10) => :opacity,\n            :x => byrow(triangle) => :t1,\n            :x => byrow(x->triangle(x, [(1,-1), (1,-1), (3.1,-1)])) => :t2\n          )\n\n  flatten!(r\"^t\")\n\n  modify!(\n            :t1 => splitter => [:x1, :y1],\n            :t2 => splitter => [:x2, :y2]\n          )\n  sgplot(\n          [\n            Polygon(x=\"x$i\", y=\"y$i\",\n                    id=:x,\n                    opacityresponse=:opacity,\n                    color=:darkgreen,\n                    outline=false)\n            for i in 1:2\n          ],\n          height=200,\n          width=800,\n          xaxis=Axis(show=false),\n          yaxis=Axis(show=false)\n        )\nend","category":"page"},{"location":"Plots/Polygon/polygon/","page":"Polygon","title":"Polygon","text":"","category":"page"},{"location":"Plots/Polygon/polygon/","page":"Polygon","title":"Polygon","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"lib/Axis_Legend/#Miscellaneous","page":"Axis & Legend","title":"Miscellaneous","text":"","category":"section"},{"location":"lib/Axis_Legend/#Axis","page":"Axis & Legend","title":"Axis","text":"","category":"section"},{"location":"lib/Axis_Legend/","page":"Axis & Legend","title":"Axis & Legend","text":"Axis","category":"page"},{"location":"lib/Axis_Legend/#StatisticalGraphics.Axis","page":"Axis & Legend","title":"StatisticalGraphics.Axis","text":"Axis(args...)\n\nRepresent an Axis with given arguments.\n\nKeyword arguments\n\nScale information\n\nexponent: When type=:power, this will be used to pass the exponent. \ntype: The scale to be used for the axis, e.g. :linear, :point, :band, :time, :date, :log, :symlog, :sqrt, :power,... default: :linear\n\nAxis options\n\nd3format: Allow users to directly pass an axis format. It must follow the rules described in d3.format(). \nd3formattype: If values are time or date, this option can be used to control their format. \ndropmissing: When true drops missings from discrete type axis domain. default: false\nnice: Automatically round axis domain to make it nice. default: true\noffset: The value to offset the axis. default: 1\norder: Determine how to order ticks for discrete types axis, e.g. :data, :ascending, :descending. default: :data\npadding: Padding to extend axis. For discrete type axis it should be between 0 and 1, and for other type it indicates the amount in pixel. \nrange: Allow to manually set the domain of the axis. \nreverse: Reverse the order of ticks. default: false\nshow: When it is false, domain, title, ticks, labels are set to false. default: true\nvalues: User can use the keyword argument to manually put ticks. When a tuple of vector is passed, the first element will be used for the location and the second one will be used as displayed values. \n\nGrids\n\ngrid: Determine if the grids are shown. default: false\ngridcolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"). default: :lightgray\ngriddash: Grids dash style. default: [0]\ngridthickness: Grids tickness. default: 0.5\n\nAxis appearance\n\ncolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"). default: :black\nfont: The default font that will be used for all elements of the axis. \nfontweight: The default font weight that will be used for all elements of the axis. \nitalic: The default font style that will be used for all elements of the axis. \n\nDomain properties\n\ndomain: If false the domain line would not be shown. default: true\ndomaincolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"). \ndomaindash: The domain line dash. default: [0]\ndomainthickness: The domain line thickness. default: 1.01\n\nTicks properties\n\ntickcolor: The default color for the mark. User can pass color's name as symbol (e.g. :red), as string (e.g. \"red\"), as HTML color value (e.g. \"#4682b4\"). \ntickcount: Number of ticks. \ntickdash: Ticks dash style. default: [0]\nticks: If false the ticks will not be shown. default: true\nticksize: Ticks size in pixel. default: 5\ntickthickness: Tickness of ticks in pixel. default: 1.01\n\nTitle properties\n\ntitle: Axis title. \ntitlealign: The text alignment. \ntitleangle: The text angle. \ntitlebaseline: The text baseline. \ntitlecolor: The text color. \ntitlefont: The font name for displaying text. \ntitlefontweight: The font weight for displaying text, use 100 for thin font and 900 for the bold one. \ntitleitalic: If true the italic style will be used for displaying text. \ntitleloc: Title location, i.e. :middle, :end, :start. default: :middle\ntitlepadding: Title padding. \ntitlepos: Title position in the form of [x,y]. \ntitlesize: The font size for displaying text. \n\nLabels properties\n\nalign: The text alignment. \nangle: The text angle. default: 0\nbaseline: The text baseline. \nlabelcolor: The text color. \nlabelfont: The font name for displaying text. \nlabelfontweight: The font weight for displaying text, use 100 for thin font and 900 for the bold one. \nlabelitalic: If true the italic style will be used for displaying text. \nlabeloverlap: If true, avoids overlapping of labels. default: true\nlabelpadding: The extra padding between labels and ticks. \nlabelsize: The font size for displaying text. \nshowlabels: If false the axis labels will not be shown. default: true\n\nMiscellaneous\n\ntranslate: The translate amount of the axis, see vega documentations for more information. \nzindex: If 1 puts the axis elements on top of other marks in the graph. default: 0\n\n\n\n\n\n","category":"type"},{"location":"lib/Axis_Legend/#Legend","page":"Axis & Legend","title":"Legend","text":"","category":"section"},{"location":"lib/Axis_Legend/","page":"Axis & Legend","title":"Axis & Legend","text":"Legend","category":"page"},{"location":"lib/Axis_Legend/#StatisticalGraphics.Legend","page":"Axis & Legend","title":"StatisticalGraphics.Legend","text":"Legend(args...)\n\nRepresent a Legend with given arguments.\n\nKeyword arguments\n\nLegend identity\n\nname: The legend id which refers to a legend id of a plot. \n\nLegend options\n\nd3format: Allow users to directly pass a legend format. It must follow the rules described in d3.format(). \nd3formattype: If values are time or date, this option can be used to control their format. \nlimit: The number of elements to be shown in the legend. \nvalues: Allow user manually provide the values for the legend. \n\nLegend appearance\n\ncolumns: The number of columns to be used to show the legend elements. default: 1\ncolumnspace: The space between columns. default: 1\ndirection: The direction of the legend. default: :vertical\nfont: The default font that will be used for all elements of the legend. \nfontweight: The default font weight that will be used for all elements of the legend. \ngradientlength: Control the size of a gradient type legend. \ngradientthickness: Control the size of a gradient type legend (width). \ngridalign: Control how to align multiple legends. default: :each\nitalic: The default font style that will be used for all elements of the legend. \norient: The location of the legend. User can pass [legendX, legendY] for a precise location. default: :right\nrowspace: The space between rows. default: 1\nsize: The legend element size. default: 100\nsymbol: Indicate the symbol for discrete type legends. \n\nTitle properties\n\ntitle: Legend title. \ntitlefont: The font name for displaying text. \ntitlefontweight: The font weight for displaying text, use 100 for thin font and 900 for the bold one. \ntitleitalic: If true the italic style will be used for displaying text. \ntitlesize: The font size for displaying text. \n\nLabels properties\n\nlabelfont: The font name for displaying text. \nlabelfontweight: The font weight for displaying text, use 100 for thin font and 900 for the bold one. \nlabelitalic: If true the italic style will be used for displaying text. \nlabelsize: The font size for displaying text. \n\n\n\n\n\n","category":"type"},{"location":"Plots/Bar/bar4/#demo_bar_chart4","page":"Label Bars","title":"Label Bars","text":"","category":"section"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"using InMemoryDatasets, StatisticalGraphics, DLMReader, Chain\n\nsvg(\"assets/bar_chart4.svg\", sgplot(Dataset(x=repeat(1:5, inner=2), y=[5,6,7,8,6,3,2,4,2,1], g=repeat(1:2, 5),z=[-5,0,-7,0,-6,0,-4,0,-2,0]), Bar(y=:x, response=:y, group=:g, normalize=true, label=:height, labeld3format=\".0%\", labelpos=:middle, labelcolor=:auto), nominal=:g, yaxis=Axis(reverse=true, domain=false, titlecolor=:white, labelcolor=:white, tickcolor=:white), xaxis=Axis(domain=true, offset=5, titlecolor=:white, tickcolor=:white, d3format=\"%\"), width=100, height=100, legend=false, groupcolormodel=Dict(:scheme=>:darkred))) #hide","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"Change the location and postion of labels","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"cars = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                              \"..\", \"docs\", \"assets\", \"cars.csv\"))\n\nsgplot(cars, Bar(y=:Origin, barwidth=0.7, label=:category,\n                    labelpos=:start, labelloc=0, barcorner=[0,5,0,5]),\n                    yaxis=Axis(show=false),\n                    clip=false,\n                    height=200,\n                    width=200)","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"Using the multiple charts to set multiple labels","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"sgplot(cars, [\n                Bar(y=:Origin, barwidth=0.7, label=:category,\n                    labelpos=:start, labelloc=0, barcorner=[0,5,0,5]),\n                Bar(y=:Origin, opacity=0, label=:height, labelcolor=:white,\n                    labeloffset=-10)\n             ],\n\n                    yaxis=Axis(show=false),\n                    clip=false,\n                    height=200,\n                    width=200)","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"Label bars with negative heights","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"ds = Dataset(x=1:5, y=[1.2,-3.1,2,4.3,-.1])\n\nsgplot(ds, Bar(x=:x, response=:y, label=:height,\n                 labelbaseline=:bottom),\n                 yaxis=Axis(title=\"y\"),\n                 width=200\n)","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"Label grouped bar charts","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"population = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                              \"..\", \"docs\", \"assets\", \"population.csv\"))\n\nsex(x) = x == 1 ? \"male\" : \"female\" # format for :sex\n\nsetformat!(population, :sex => sex)\n\npop2000 = filter(population, :year, by = ==(2000))\n\nsgplot(pop2000, Bar(y=:age, response=:people,\n                         group=:sex, normalize=true, label=:height,\n                         labelpos=:middle, labeld3format=\".1%\"),\n                         xaxis=Axis(title=\"Population\", d3format=\"%\"),\n                         yaxis=Axis(reverse=true))","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"Simulated data","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"ds = Dataset(rand(1:4, 100, 2), :auto)\n\nsgplot(ds, Bar(x=:x1, group=:x2, label=:height), nominal=:x2)","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"Passing labelcolor=:auto to assign label color based on the contrast of colors","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"sgplot(ds, Bar(x=:x1, group=:x2, label=:height, labelcolor=:auto),\n                    nominal=:x2, groupcolormodel=Dict(:scheme=>:greys))","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"example","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"ds = Dataset(rand(1:4, 100, 10), :auto)\n\nsgplot(ds, Bar(y=:x1, group=:x3, label=:height,\n                labelcolor=:auto, response=:x2, space=0.1,\n                labelpos=:middle, barcorner=10, normalize=true,\n                labeld3format=\".1%\", outlinecolor=:black,\n                groupspace=0.1, groupdisplay=:cluster),\n                groupcolormodel=Dict(:scheme=>:darkgreen),\n                xaxis=Axis(title=\"Normalized sum of x2\", domain=false, d3format=\"%\"),\n                yaxis=Axis(domain=false, ticksize=0, order=:ascending),\n                legend=false,\n                clip=false)","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"Passing default groupdisplay","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"sgplot(ds, Bar(y=:x1, group=:x3, label=:height,\n                labelcolor=:auto, response=:x2, space=0.1,\n                labelpos=:middle, barcorner=10, normalize=true,\n                labeld3format=\".1%\", outlinecolor=:black),\n                groupcolormodel=Dict(:scheme=>:darkgreen),\n                xaxis=Axis(title=\"Normalized sum of x2\", domain=false, d3format=\"%\"),\n                yaxis=Axis(domain=false, ticksize=0, order=:ascending),\n                legend=false,\n                clip=false)","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"Population Change","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"state_pop = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                              \"..\", \"docs\", \"assets\", \"state-population-2010-2019.tsv\"),\n                              delimiter='\\t')\n\n@chain state_pop  begin\n    modify!([2,3] => byrow(x->(x[1]-x[2])/x[2])=>:Change,\n                 :Change=>byrow(>(0))=>:Color)\n    sgplot([\n            Bar(y=:State, response=:Change,\n                orderresponse=:Change,\n                colorresponse=:Color, colormodel=[:darkorange, :steelblue],\n                label=:height, labeld3format=\"+.1%\", labeloffset=5,\n                labelalign=:left,\n                labelsize=8,\n                x2axis=true),\n            Bar(y=:State, response=:Change, opacity=0,\n                label=:category, labeloffset=-5, labelalign=:right,\n                labelsize=8,labelpos=:start,\n                x2axis=true)\n            ],\n            x2axis=Axis(title=\"Change\", domain=false, d3format=\"%\", grid=true),\n            yaxis=Axis(show=false),\n            clip=false,\n            legend=false,\n            fontweight=100,\n            height=600,\n            width=400\n        )\nend","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"","category":"page"},{"location":"Plots/Bar/bar4/","page":"Label Bars","title":"Label Bars","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"Plots/Pie/pie2/#demo_pie2","page":"Other features","title":"Other features","text":"","category":"section"},{"location":"Plots/Pie/pie2/","page":"Other features","title":"Other features","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Pie/pie2/","page":"Other features","title":"Other features","text":"using InMemoryDatasets, StatisticalGraphics, DLMReader\n\nsvg(\"assets/pie_2.svg\", sgplot( Dataset(x=[0.6, 0.4], done=[\"60%\", missing]),[Pie(category=:x, response=:x,innerradius=0.7,startangle=-110,endangle=110,outlinecolor=:black,colormodel=[:steelblue, :transparent]),Pie(category=:done,opacity=0,label=:category,labelpos=0,labelangle=0,labelsize=20,labelcolor=:gray)],legend=false,clip=false,width=150, height=100,)) #hide","category":"page"},{"location":"Plots/Pie/pie2/","page":"Other features","title":"Other features","text":"Create gauge with changing the values of start/end angles","category":"page"},{"location":"Plots/Pie/pie2/","page":"Other features","title":"Other features","text":"ds = Dataset(x=[0.6, 0.4], done=[\"60%\", missing])\nsgplot(ds,\n    [\n        Pie(category=:x, response=:x,\n            innerradius=0.7,\n            startangle=-110,\n            endangle=110,\n            outlinecolor=:black,\n            colormodel=[:steelblue, :transparent]\n        ),\n        Pie(category=:done,\n            opacity=0,\n            label=:category,\n            labelpos=0,\n            labelangle=0,\n            labelsize=100,\n            labelcolor=:gray\n        )\n    ],\n    legend=false\n\n)","category":"page"},{"location":"Plots/Pie/pie2/","page":"Other features","title":"Other features","text":"Controlling the color model","category":"page"},{"location":"Plots/Pie/pie2/","page":"Other features","title":"Other features","text":"ds = Dataset(x=1:39, y=[rand(1:39, 30) for _ in 1:39])\nflatten!(ds, :y)\ninsertcols!(ds, :z=>rand(nrow(ds)))\n\nsgplot(ds,\n        Pie(category=:x, group=:y,\n            response=:z,\n            groupspace=0,\n            innerradius=0.1,\n            piecorner=10,\n            colormodel=[:black, :white]),\n        legend=false,\n    )","category":"page"},{"location":"Plots/Pie/pie2/","page":"Other features","title":"Other features","text":"Nested Pie chart","category":"page"},{"location":"Plots/Pie/pie2/","page":"Other features","title":"Other features","text":"cars = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"cars.csv\"),\n                                 types=Dict(9=>Date))\n\nsgplot(cars,\n           [\n            Pie(category=:Cylinders,\n                group=:Origin,\n                groupspace=0.05,\n                innerradius=0.1,\n                label=:category,\n                labelangle=0,\n                piecorner=5\n            ),\n            Pie(category=:Origin,\n                group=:Origin,\n                innerradius=0.1,\n                opacity=0,\n                endangle=0.1,\n                groupspace=0.05,\n                label=:category,\n                labelpos=1,\n                labelbaseline=:bottom,\n                labelsize=8\n            )\n           ],\n    legend=false,\n    clip=false\n)","category":"page"},{"location":"Plots/Pie/pie2/","page":"Other features","title":"Other features","text":"","category":"page"},{"location":"Plots/Pie/pie2/","page":"Other features","title":"Other features","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"Plots/TextPlot/textplot/#demo_text1","page":"TextPlot","title":"TextPlot","text":"","category":"section"},{"location":"Plots/TextPlot/textplot/","page":"TextPlot","title":"TextPlot","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/TextPlot/textplot/","page":"TextPlot","title":"TextPlot","text":"using InMemoryDatasets, DLMReader, StatisticalGraphics\n\nsvg(\"assets/text1.svg\", sgplot(Dataset(x=[1,2,3], y=[1,2,3], text='A':'C'), TextPlot(x=:x, y=:y, text=:text), width=100, height=100, xaxis=Axis(translate=0,offset=0, grid=false, griddash=[3], padding=10), yaxis=Axis(translate=0, grid=false, padding=10, offset=0, griddash=[3]), legend=false, clip=false)) #hide","category":"page"},{"location":"Plots/TextPlot/textplot/","page":"TextPlot","title":"TextPlot","text":"Example","category":"page"},{"location":"Plots/TextPlot/textplot/","page":"TextPlot","title":"TextPlot","text":"ds = Dataset(x=rand(10), y=rand(10), text='A':'J')\n\nsgplot(ds, TextPlot(x=:x, y=:y, text=:text))","category":"page"},{"location":"Plots/TextPlot/textplot/","page":"TextPlot","title":"TextPlot","text":"","category":"page"},{"location":"Plots/TextPlot/textplot/","page":"TextPlot","title":"TextPlot","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"Plots/Violin/violin2/#demo_violin2","page":"Combining with other plots","title":"Combining with other plots","text":"","category":"section"},{"location":"Plots/Violin/violin2/","page":"Combining with other plots","title":"Combining with other plots","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Violin/violin2/","page":"Combining with other plots","title":"Combining with other plots","text":"using InMemoryDatasets, StatisticalGraphics, DLMReader\n\niris = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"iris.csv\")) #hide\ncolors = [:steelblue, :darkorange, :darkred, :green] #hide\nsvg(\"assets/violin2.svg\", sgplot(iris[1:5:100, :], reduce(vcat, [[Violin(x=i, category=5, color=:white, thickness=0.2), BoxPlot(x=i, category=5, boxwidth=0.1, whiskerdash=[0], outlinethickness=0.2, meansymbolsize=0, medianthickness=0.2), Scatter(x=i, y=5, jitter=[0,5], color=colors[i], outlinecolor=:white, opacity=0.5, size=10, thickness=0.2) ] for i in 1:4 ] ), wallcolor=:lightgray, xaxis=Axis(offset=0, grid=true, gridcolor=:white, values = [0,2,4,6,8], domain=false, ticksize=0), yaxis=Axis(offset=0, padding=0.1, domain=false, ticksize=0, title=\"\", values=([\"Iris-versicolor\", \"Iris-setosa\"], [\"ver\", \"set\"])), groupcolormodel=colors, legend=false, width=100, height=100,font=\"Times\", clip=false)) #hide","category":"page"},{"location":"Plots/Violin/violin2/","page":"Combining with other plots","title":"Combining with other plots","text":"Combingin with BoxPlot and Scatter","category":"page"},{"location":"Plots/Violin/violin2/","page":"Combining with other plots","title":"Combining with other plots","text":"iris = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"iris.csv\"))\ncolors = [:steelblue, :darkorange, :darkred, :green]\nsgplot(\n        iris,\n        reduce(vcat,\n          [\n            [\n              Violin(x=i, category=5, color=:white),\n              BoxPlot(x=i, category=5, boxwidth=0.1, whiskerdash=[0]),\n              Scatter(x=i, y=5, jitter=[0,20], color=colors[i], outlinecolor=:white, opacity=0.5)\n            ]\n            for i in 1:4\n          ]\n            ),\n        wallcolor=:lightgray,\n        xaxis=Axis(offset=10, grid=true, gridcolor=:white, values = -1:9, domain=false, ticksize=0),\n        yaxis=Axis(offset=10, padding=0.1, domain=false, ticksize=0),\n        groupcolormodel=colors,\n        font=\"Times\"\n      )","category":"page"},{"location":"Plots/Violin/violin2/","page":"Combining with other plots","title":"Combining with other plots","text":"","category":"page"},{"location":"Plots/Violin/violin2/","page":"Combining with other plots","title":"Combining with other plots","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"man/grid/#Introduction","page":"Grid","title":"Introduction","text":"","category":"section"},{"location":"man/grid/","page":"Grid","title":"Grid","text":"The sggrid function positions a collection of Plots within a grid.","category":"page"},{"location":"man/grid/#Example","page":"Grid","title":"Example","text":"","category":"section"},{"location":"man/grid/","page":"Grid","title":"Grid","text":"using InMemoryDatasets, StatisticalGraphics\n\nds = Dataset(x=randn(100), y=randn(100));\nh_x = sgplot(ds, Histogram(x=:x, space=0), xaxis=Axis(show=false), yaxis=Axis(show=false), height=200);\nh_y = sgplot(ds, Histogram(y=:y, space=0), xaxis=Axis(show=false), yaxis=Axis(show=false), width=200);\nxy = sgplot(ds, Scatter(x=:x, y=:y), xaxis=Axis(domain=false), yaxis=Axis(domain=false));\n\nsggrid(h_x, sggrid(xy, h_y), columns=1)","category":"page"},{"location":"man/polygon/#Example","page":"Polygon","title":"Example","text":"","category":"section"},{"location":"man/polygon/","page":"Polygon","title":"Polygon","text":"using InMemoryDatasets, StatisticalGraphics\n\nfunction npolygon(n, sangle, radius)\n    stepsize = 360 / n\n    res = Vector{Tuple{Float64,Float64}}(undef, n)\n    for i in 1:n\n        degree = (i - 1) * stepsize + sangle\n        res[i] = (cosd(degree) * radius, sind(degree) * radius)\n    end\n    res\nend\n\n\nds = Dataset(sangle=range(0, 500, step=10))\ninsertcols!(ds, :radius => [0.95^i for i in 0:nrow(ds)-1])\ninsertcols!(ds, :n => (3:8...,))\nflatten!(ds, :n)\nmodify!(ds, (3, 1, 2) => byrow(npolygon) => :polygon)\nmodify!(ds, :polygon => byrow(x -> 1:length(x)) => :vert)\nflatten!(ds, [:polygon, :vert])\nmodify!(ds, :polygon => splitter => [:x, :y])\nmodify!(ds, :radius => byrow(x -> 1.1 - x) => :opacity)\n\nsgmanipulate(groupby(ds, :n),\n             Polygon(x=:x, y=:y, id=:sangle,\n                        opacityresponse=:opacity,\n                        colorresponse=:opacity,\n                        outlinecolor=:white,\n                        outlinethickness=0.5\n                    ),\n                    nominal=:opacity,\n                    width=400,\n                    xaxis=Axis(show=false),\n                    yaxis=Axis(show=false),\n                    legend=false,\n                    wallcolor=:lightgray\n            )","category":"page"},{"location":"Plots/Scatter/scatter4/#demo_scatterplot_label1","page":"Label points","title":"Label points","text":"","category":"section"},{"location":"Plots/Scatter/scatter4/","page":"Label points","title":"Label points","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Scatter/scatter4/","page":"Label points","title":"Label points","text":"using InMemoryDatasets, StatisticalGraphics, DLMReader, Chain\n\nsvg(\"assets/scatter_plot_label1.svg\", sgplot(filter(filereader(joinpath(dirname(pathof(StatisticalGraphics)),\"..\", \"docs\", \"assets\", \"nations.csv\"), emptycolname=true, quotechar='\"'), :year, by = ==(2010))[1:5:100, :], Scatter(x=:gdpPercap,y=:lifeExp, size=40, group=:region, labelresponse=:country, labelfont=\"Times\", labelsize=8, labelcolor=:group), clip=false, xaxis=Axis(grid=true, domain=false, labelcolor=:white, titlecolor=:white, tickcolor=:white, gridcolor=:lightgray, gridthickness=0.4, offset=0, tickcount=10), yaxis=Axis(grid=true, gridcolor=:lightgray,gridthickness=0.4, offset=0, tickcount=10,domain=false, labelcolor=:white, titlecolor=:white, tickcolor=:white), width=100, height=100, legend=false)) #hide","category":"page"},{"location":"Plots/Scatter/scatter4/","page":"Label points","title":"Label points","text":"Scatter automatically put labels of data points around them when a column is passed as labelresponse.","category":"page"},{"location":"Plots/Scatter/scatter4/","page":"Label points","title":"Label points","text":"In the following example we use the country name to label data points. Scatter uses clever algorithms to avoid any overlaps between labels and points.","category":"page"},{"location":"Plots/Scatter/scatter4/","page":"Label points","title":"Label points","text":"nations = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"nations.csv\"),\n                                 emptycolname=true, quotechar='\"')\n@chain nations begin\n    filter(:year, by = ==(2010))\n    sgplot(Scatter(x=:gdpPercap, y=:lifeExp, group=:region,\n                                 labelresponse=:country))\nend","category":"page"},{"location":"Plots/Scatter/scatter4/","page":"Label points","title":"Label points","text":"Users can control the appearance of labels by passing suitable keyword arguments. However, if users desire to match the color of labels and the points, they can pass labelcolor=:group or labelcolor=:colorresponse accordingly.","category":"page"},{"location":"Plots/Scatter/scatter4/","page":"Label points","title":"Label points","text":"@chain nations begin\n    filter(:year, by = ==(2010))\n    sgplot(Scatter(x=:gdpPercap, y=:lifeExp, group=:region,\n                                 labelresponse=:country, labelsize=8,\n                                 labelcolor=:group))\nend","category":"page"},{"location":"Plots/Scatter/scatter4/","page":"Label points","title":"Label points","text":"","category":"page"},{"location":"Plots/Scatter/scatter4/","page":"Label points","title":"Label points","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"Plots/Histogram/histogram/#demo_histogram1","page":"Histogram","title":"Histogram","text":"","category":"section"},{"location":"Plots/Histogram/histogram/","page":"Histogram","title":"Histogram","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Histogram/histogram/","page":"Histogram","title":"Histogram","text":"using InMemoryDatasets, DLMReader, StatisticalGraphics\n\nsvg(\"assets/hist1.svg\", sgplot(Dataset(x=randn(1000)), Histogram(x=:x, space=0), width=100, height=100, xaxis=Axis(translate=0,offset=0, grid=true, griddash=[3]), yaxis=Axis(translate=0, grid=true, offset=0, griddash=[3]))) #hide","category":"page"},{"location":"Plots/Histogram/histogram/","page":"Histogram","title":"Histogram","text":"Histogram draw histogram for given column.","category":"page"},{"location":"Plots/Histogram/histogram/","page":"Histogram","title":"Histogram","text":"ds = Dataset(x=randn(10000))\n\nsgplot(ds, Histogram(x=:x))","category":"page"},{"location":"Plots/Histogram/histogram/","page":"Histogram","title":"Histogram","text":"Assigning the y keyword argument, produce horizontal plot","category":"page"},{"location":"Plots/Histogram/histogram/","page":"Histogram","title":"Histogram","text":"sgplot(ds, Histogram(y=:x))","category":"page"},{"location":"Plots/Histogram/histogram/","page":"Histogram","title":"Histogram","text":"By default Histogram compute pdf, however, user may pass :cdf, :count, ... or anyother for scaling the bars","category":"page"},{"location":"Plots/Histogram/histogram/","page":"Histogram","title":"Histogram","text":"sgplot(ds, Histogram(x=:x, scale=:cdf))","category":"page"},{"location":"Plots/Histogram/histogram/","page":"Histogram","title":"Histogram","text":"Like other plots, Histogram support group,","category":"page"},{"location":"Plots/Histogram/histogram/","page":"Histogram","title":"Histogram","text":"iris = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"iris.csv\"))\n\nsgplot(iris,\n        Histogram(x=:SepalLength, group=:Species, opacity=0.5)\n)","category":"page"},{"location":"Plots/Histogram/histogram/","page":"Histogram","title":"Histogram","text":"Passing midpoints allows more control on bin selection","category":"page"},{"location":"Plots/Histogram/histogram/","page":"Histogram","title":"Histogram","text":"sgplot(iris,\n        Histogram(x=:SepalLength,\n                    group=:Species,\n                    opacity=0.5,\n                    midpoints=3.5:.4:8\n                )\n)","category":"page"},{"location":"Plots/Histogram/histogram/","page":"Histogram","title":"Histogram","text":"","category":"page"},{"location":"Plots/Histogram/histogram/","page":"Histogram","title":"Histogram","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"Plots/Bar/bar/#demo_bar_chart1","page":"Simple Bar chart","title":"Simple Bar chart","text":"","category":"section"},{"location":"Plots/Bar/bar/","page":"Simple Bar chart","title":"Simple Bar chart","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Bar/bar/","page":"Simple Bar chart","title":"Simple Bar chart","text":"using InMemoryDatasets, StatisticalGraphics, DLMReader\n\nsvg(\"assets/bar_chart1.svg\", sgplot(Dataset(x=1:5), Bar(x=:x, response=:x, colorresponse=:x, colorstat=sum, colormodel=Dict(:scheme=>:blues)), width=100, height=100, xaxis=Axis(offset=0, domain=false,labelcolor=:black, tickcolor=:white,titlecolor=:white), yaxis=Axis(offset=0,domain=false,labelcolor=:white, tickcolor=:white,titlecolor=:white), legend=false)) #hide","category":"page"},{"location":"Plots/Bar/bar/","page":"Simple Bar chart","title":"Simple Bar chart","text":"Bar produces bar chart, by default it assigns the frequency of each value to the height of the corresponding bar","category":"page"},{"location":"Plots/Bar/bar/","page":"Simple Bar chart","title":"Simple Bar chart","text":"movies = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"movies.csv\"),\n                                 dlmstr=\"::\")\nsgplot(movies, Bar(x=\"Major Genre\"))","category":"page"},{"location":"Plots/Bar/bar/","page":"Simple Bar chart","title":"Simple Bar chart","text":"To produce horizontal bar chart, pass the analysis variable to y","category":"page"},{"location":"Plots/Bar/bar/","page":"Simple Bar chart","title":"Simple Bar chart","text":"sgplot(movies, Bar(y=\"Major Genre\"))","category":"page"},{"location":"Plots/Bar/bar/","page":"Simple Bar chart","title":"Simple Bar chart","text":"A response column can be pass to Bar when the analysis variable is different from categories. By default the sum of the response column will be used as the height of each bar. User can pass any function in the form of (f, x)->... to stat to customise the aggregation of response","category":"page"},{"location":"Plots/Bar/bar/","page":"Simple Bar chart","title":"Simple Bar chart","text":"##IMD.maximum handles missing values\nsgplot(movies, Bar(y=\"Major Genre\", response=\"Worldwide Gross\", stat=IMD.maximum))","category":"page"},{"location":"Plots/Bar/bar/","page":"Simple Bar chart","title":"Simple Bar chart","text":"User can control the order of bars by passing orderresponse. Bar automatically aggregate the values of orderresponse in each category and arrange the category in the final output accordingly.","category":"page"},{"location":"Plots/Bar/bar/","page":"Simple Bar chart","title":"Simple Bar chart","text":"sgplot(movies, Bar(y=\"Major Genre\", response=\"Worldwide Gross\",\n                     stat=IMD.maximum, orderresponse=\"Worldwide Gross\",\n                     orderstat=IMD.maximum))","category":"page"},{"location":"Plots/Bar/bar/","page":"Simple Bar chart","title":"Simple Bar chart","text":"Similar to other marks there are many keyword arguments to fine tune the final output","category":"page"},{"location":"Plots/Bar/bar/","page":"Simple Bar chart","title":"Simple Bar chart","text":"sgplot(movies, Bar(y=\"Major Genre\", response=\"Worldwide Gross\",\n                     stat=IMD.maximum, orderresponse=\"Worldwide Gross\",\n                     orderstat=IMD.maximum, colorresponse=\"Worldwide Gross\",\n                     colorstat=mean,\n                     colormodel=Dict(:scheme=>:blues)))","category":"page"},{"location":"Plots/Bar/bar/","page":"Simple Bar chart","title":"Simple Bar chart","text":"And","category":"page"},{"location":"Plots/Bar/bar/","page":"Simple Bar chart","title":"Simple Bar chart","text":"sgplot(movies, Bar(y=\"Major Genre\", response=\"Worldwide Gross\",\n                     stat=IMD.maximum, orderresponse=\"Worldwide Gross\",\n                     orderstat=IMD.maximum, colorresponse=\"Worldwide Gross\",\n                     colorstat=mean,\n                     colormodel=Dict(:scheme=>:browns),\n                     barcorner=[0,5,0,5],\n                     space=0.4,\n                     outlinecolor=:black,\n                     legend=:bar_leg,\n                     missingmode=1\n                     ),\n                     xaxis=Axis(title=\"Maximum Worldwide Gross\",\n                        domain=false, d3format=\"\\$,f\", grid=true),\n                     yaxis=Axis(domain=false, grid=true),\n                     legend=Legend(name=:bar_leg, d3format=\"\\$,f\",\n                        title=\"Average Worldwide Gross\", orient=:bottom,\n                     direction=:horizontal, gradientlength=600),\n                     clip=false)","category":"page"},{"location":"Plots/Bar/bar/","page":"Simple Bar chart","title":"Simple Bar chart","text":"","category":"page"},{"location":"Plots/Bar/bar/","page":"Simple Bar chart","title":"Simple Bar chart","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"Plots/#Plots","page":"Plots","title":"Plots","text":"","category":"section"},{"location":"Plots/#Band","page":"Plots","title":"Band","text":"","category":"section"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card-section\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Band plot","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Using the Band mark to produce area plots","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>","category":"page"},{"location":"Plots/#Bar","page":"Plots","title":"Bar","text":"","category":"section"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card-section\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Simple Bar chart","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Using the Bar mark to produce Bar charts","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Grouped bar charts","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Bar can use a categorical columns to produce grouped bar chart","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Diverging stacked bar chart","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Producing Diverging stacked  bar chart using baseline keyword and overlaid bar charts","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Label Bars","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Label Bars and related keyword arguments","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>","category":"page"},{"location":"Plots/#BoxPlot","page":"Plots","title":"BoxPlot","text":"","category":"section"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card-section\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Box-Whisker chart","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Using the BoxPlot mark to produce Box-Whisker charts","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>","category":"page"},{"location":"Plots/#Bubble","page":"Plots","title":"Bubble","text":"","category":"section"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card-section\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Bubble plot","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Scatter plot with varying size","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>","category":"page"},{"location":"Plots/#Density","page":"Plots","title":"Density","text":"","category":"section"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card-section\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Density","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Drawing Density","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>","category":"page"},{"location":"Plots/#Heatmap","page":"Plots","title":"Heatmap","text":"","category":"section"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card-section\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Heatmap","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Drawing Heatmap (2D Histogram)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>","category":"page"},{"location":"Plots/#Histogram","page":"Plots","title":"Histogram","text":"","category":"section"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card-section\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Histogram","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Drawing Histogram","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>","category":"page"},{"location":"Plots/#Line","page":"Plots","title":"Line","text":"","category":"section"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card-section\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Line plot","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Using the Line mark to produce a simple line plot","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Multiple lines","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Using extra columns to produce multiple lines","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Missing values and other features","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Breaking lines when data are missing","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>","category":"page"},{"location":"Plots/#Pie","page":"Plots","title":"Pie","text":"","category":"section"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card-section\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Pie chart","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Using the Pie mark to produce Pie charts","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Other features","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Customising Pie charts","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>","category":"page"},{"location":"Plots/#Polygon","page":"Plots","title":"Polygon","text":"","category":"section"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card-section\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Polygon","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Using the Polygon mark to draw simple polygons","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>","category":"page"},{"location":"Plots/#Reg","page":"Plots","title":"Reg","text":"","category":"section"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card-section\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Regression line","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Fitting regression lines to data","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>","category":"page"},{"location":"Plots/#Scatter","page":"Plots","title":"Scatter","text":"","category":"section"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card-section\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Simple Scatter plot","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Using the Scatter mark to produce a simple scatter plot","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Customising overall appearance","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Using suitable keyword arguments to fine tune the final output","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Using grouping variables","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Passing extra columns to group observations","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Label points","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Label observations on a scatter plot","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>","category":"page"},{"location":"Plots/#Segment","page":"Plots","title":"Segment","text":"","category":"section"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card-section\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Line segments","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Using the Segment mark to produce line segments","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>","category":"page"},{"location":"Plots/#TextPlot","page":"Plots","title":"TextPlot","text":"","category":"section"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card-section\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"TextPlot","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Put text on a graph","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>","category":"page"},{"location":"Plots/#Violin","page":"Plots","title":"Violin","text":"","category":"section"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card-section\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Violin plot","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Using the Violin mark to produce Violin plot","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"(Image: list-card-cover-image)","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Combining with other plots","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"Annotate Violin with other plots","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"Plots/","page":"Plots","title":"Plots","text":"</div>","category":"page"},{"location":"Plots/Line/line/#demo_line_plot1","page":"Line plot","title":"Line plot","text":"","category":"section"},{"location":"Plots/Line/line/","page":"Line plot","title":"Line plot","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Line/line/","page":"Line plot","title":"Line plot","text":"Line allows users to produce line plot. In the following example we read the stocks data from hard drive and then produce a simple line plot using Line and the sgplot function.","category":"page"},{"location":"Plots/Line/line/","page":"Line plot","title":"Line plot","text":"using InMemoryDatasets, DLMReader, StatisticalGraphics\n\nsvg(\"assets/line_plot1.svg\", sgplot(Dataset(x=1:10, y=[1,-1.1,-2,0,0.5,1.5,1.78,1.9,1.5,1.8]), [Line(x=:x, y=:y, thickness=2), RefLine(values=[0], axis=:yaxis)], width=100, height=100, xaxis=Axis(translate=0,offset=0, grid=true, griddash=[3]), yaxis=Axis(translate=0, grid=true, offset=0, griddash=[3]))) #hide","category":"page"},{"location":"Plots/Line/line/","page":"Line plot","title":"Line plot","text":"Creating a data set","category":"page"},{"location":"Plots/Line/line/","page":"Line plot","title":"Line plot","text":"ds = Dataset(x=range(0,6,length=100))\nmodify!(ds, :x=>byrow(sin)=>:y)\n\nsgplot(ds, Line(x=:x, y=:y))","category":"page"},{"location":"Plots/Line/line/","page":"Line plot","title":"Line plot","text":"Dubai Weather Users can pass multiple plot types to the sgplot function to produce an overlayed graph.","category":"page"},{"location":"Plots/Line/line/","page":"Line plot","title":"Line plot","text":"dubai_weather = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"dubai_weather.csv\"),\n                                 types=Dict(1 =>Date))\n\nfirst(dubai_weather, 6)","category":"page"},{"location":"Plots/Line/line/","page":"Line plot","title":"Line plot","text":"User must pass type=:date to make sure that StatisticalGraphics uses an suitable scale for the corresponding axis","category":"page"},{"location":"Plots/Line/line/","page":"Line plot","title":"Line plot","text":"sgplot(dubai_weather, [Line(x=:date, y=:min), Line(x=:date, y=:max)], xaxis=Axis(type=:date))","category":"page"},{"location":"Plots/Line/line/","page":"Line plot","title":"Line plot","text":"The second axes can be used to measures with different scales on the same graph","category":"page"},{"location":"Plots/Line/line/","page":"Line plot","title":"Line plot","text":"sgplot(dubai_weather, [\n                        Line(x=:date, y=:min),\n                        Line(x=:date, y=:max),\n                        Line(x=:date, y=:pressure, breaks=true, color=:red, y2axis=true)\n                      ],\n                        xaxis=Axis(type=:date))","category":"page"},{"location":"Plots/Line/line/","page":"Line plot","title":"Line plot","text":"","category":"page"},{"location":"Plots/Line/line/","page":"Line plot","title":"Line plot","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"Plots/Line/line2/#demo_line_plot2","page":"Multiple lines","title":"Multiple lines","text":"","category":"section"},{"location":"Plots/Line/line2/","page":"Multiple lines","title":"Multiple lines","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Line/line2/","page":"Multiple lines","title":"Multiple lines","text":"Like other types, Line accepts group to produce lines with different color for each group of observations","category":"page"},{"location":"Plots/Line/line2/","page":"Multiple lines","title":"Multiple lines","text":"using InMemoryDatasets, DLMReader, StatisticalGraphics\n\nsvg(\"assets/line_plot2.svg\", sgplot(Dataset(x=repeat(1:4,inner=3), y=rand(12),g=repeat(1:4,outer=3)), Line(x=:x, y=:y, group=:g, thickness=3), nominal=:g, width=100, height=100, legend=false, xaxis=Axis(offset=0), yaxis=Axis(offset=0))) #hide\n\nstocks = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"stocks.csv\"),\n                                 types=Dict(2=>Date))\n\nfirst(stocks, 6)\n\nsgplot(stocks, Line(x=:date, y=:price, group=:symbol), xaxis=Axis(type=:date))","category":"page"},{"location":"Plots/Line/line2/","page":"Multiple lines","title":"Multiple lines","text":"","category":"page"},{"location":"Plots/Line/line2/","page":"Multiple lines","title":"Multiple lines","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"Plots/Line/line3/#demo_line_plot3","page":"Missing values and other features","title":"Missing values and other features","text":"","category":"section"},{"location":"Plots/Line/line3/","page":"Missing values and other features","title":"Missing values and other features","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Line/line3/","page":"Missing values and other features","title":"Missing values and other features","text":"Like other types, Line accepts group to produce lines with different color for each group of observations","category":"page"},{"location":"Plots/Line/line3/","page":"Missing values and other features","title":"Missing values and other features","text":"using InMemoryDatasets, DLMReader, StatisticalGraphics\n\nsvg(\"assets/line_plot3.svg\", sgplot(Dataset(x=range(-pi,pi,length=10), y=sin.(range(-pi,pi,length=10)), y2=cos.(range(-pi,pi,length=10)) ), [Line(x=:x, y=:y, thickness=1, interpolate=:natural), Scatter(x=:x,y=:y, size=30), Line(x=:x, y=:y2, thickness=1, interpolate=:natural, color=:darkorange), Scatter(x=:x,y=:y2, size=30, outlinecolor=:darkorange)], width=100, height=100, legend=false, xaxis=Axis(offset=0, grid=true, gridcolor=:white), yaxis=Axis(offset=0, padding=10, grid=true, gridcolor=:white), wallcolor=:lightgray, clip=false)) #hide","category":"page"},{"location":"Plots/Line/line3/","page":"Missing values and other features","title":"Missing values and other features","text":"By default Line ignores the missing values, however, passing breaks=true overrides this behaviour by making break when missing values encountered.","category":"page"},{"location":"Plots/Line/line3/","page":"Missing values and other features","title":"Missing values and other features","text":"dubai_weather = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"dubai_weather.csv\"),\n                                 types=Dict(1 =>Date))\nsgplot(dubai_weather, Line(x=:date, y=:pressure, breaks=true), xaxis=Axis(type=:date))","category":"page"},{"location":"Plots/Line/line3/","page":"Missing values and other features","title":"Missing values and other features","text":"Users can overlay a Scatter on top of a line plot to include marks at each combination of x and y.","category":"page"},{"location":"Plots/Line/line3/","page":"Missing values and other features","title":"Missing values and other features","text":"sgplot(dubai_weather, [Line(x=:date, y=:pressure, breaks=true), Scatter(x=:date, y=:pressure)], xaxis=Axis(type=:date))","category":"page"},{"location":"Plots/Line/line3/","page":"Missing values and other features","title":"Missing values and other features","text":"multiple axes","category":"page"},{"location":"Plots/Line/line3/","page":"Missing values and other features","title":"Missing values and other features","text":"sgplot(\n        dubai_weather,\n        [\n          Band(x=:date, lower=:min, upper=:max),\n          Line(x=:date, y=:min, color=\"#4682b4\", thickness=1),\n          Line(x=:date, y=:max, color=\"#ff7f0e\", thickness=0.5),\n          Line(x=:date, y=:pressure, color=\"#2ca02c\", y2axis=true, breaks=true),\n          Scatter(x=:date, y=:pressure, outlinecolor=\"#2ca02c\", size=10, y2axis=true)\n        ],\n        xaxis=Axis(offset=10, type=:date, grid=true, griddash=[1, 1], title=\"Date\"),\n        yaxis=Axis(offset=10, grid=true, griddash=[1, 1], title=\"Temperature(°C)\"),\n        y2axis=Axis(offset=10, title=\"Pressure\")\n)","category":"page"},{"location":"Plots/Line/line3/","page":"Missing values and other features","title":"Missing values and other features","text":"The interpolate keyword argument can be used to intepolate line,","category":"page"},{"location":"Plots/Line/line3/","page":"Missing values and other features","title":"Missing values and other features","text":"ds = Dataset(x=1:10, y=rand(10))\n\ncolor=Dict( :linear=>:blue,\n            :basis=>:red,\n            :step=>:green,\n            :natural=>:darkorange\n            )\n\nsgplot(ds, [\n            [\n              Line(x=:x, y=:y, interpolate=v, thickness=2, color=color[v])\n              for v in keys(color)\n            ]; Scatter(x=:x, y=:y, color=:steelblue, size=100)\n            ],\n            clip=false\n        )","category":"page"},{"location":"Plots/Line/line3/","page":"Missing values and other features","title":"Missing values and other features","text":"","category":"page"},{"location":"Plots/Line/line3/","page":"Missing values and other features","title":"Missing values and other features","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"Plots/Scatter/scatter/#demo_scatter_plot1","page":"Simple Scatter plot","title":"Simple Scatter plot","text":"","category":"section"},{"location":"Plots/Scatter/scatter/","page":"Simple Scatter plot","title":"Simple Scatter plot","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Scatter/scatter/","page":"Simple Scatter plot","title":"Simple Scatter plot","text":"using InMemoryDatasets, StatisticalGraphics\n\n# generate random data\nds = Dataset(x=rand(100), y=rand(100))\n\nsvg(\"assets/scatter_plot1.svg\", sgplot(ds, Scatter(x=:x, y=:y), width=100, height=100, xaxis=Axis(offset=0), yaxis=Axis(offset=0))) #hide\n\nsgplot(ds, Scatter(x=:x, y=:y))","category":"page"},{"location":"Plots/Scatter/scatter/","page":"Simple Scatter plot","title":"Simple Scatter plot","text":"","category":"page"},{"location":"Plots/Scatter/scatter/","page":"Simple Scatter plot","title":"Simple Scatter plot","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"lib/functions/#Functions","page":"Functions","title":"Functions","text":"","category":"section"},{"location":"lib/functions/#Plotting-functions","page":"Functions","title":"Plotting functions","text":"","category":"section"},{"location":"lib/functions/","page":"Functions","title":"Functions","text":"sggrid\nsgplot","category":"page"},{"location":"lib/functions/#StatisticalGraphics.sggrid","page":"Functions","title":"StatisticalGraphics.sggrid","text":"sggrid(sgps...; opts...)\n\nPosition a collection of SG plots within a grid. The opts... refers to extra keyword arguments which can be passed to sggrid. \n\nKeyword arguments\n\nPlot appearance\n\nalign: Determine how to align plots. It can be one of :all, :each, or :none. default: :none\nbackcolor: The back color. \nbordercolor: The color for the border of plots. default: :transparent\nbounds: One of :full or :flush. See vega docs for more information. default: :full\ncenter: The row and column centering, respectively. default: Bool[0, 0]\ncolumns: Number of columns to be created. \ncolumnspace: Space between columns. default: 0\nrowspace: Space between rows. default: 0\n\n\n\n\n\n","category":"function"},{"location":"lib/functions/#StatisticalGraphics.sgplot","page":"Functions","title":"StatisticalGraphics.sgplot","text":"sgplot(ds, plots;\n                mapformats=true,\n                nominal=nothing,\n                xaxis=Axis(),\n                x2axis=Axis(),\n                yaxis=Axis(),\n                y2axis=Axis(),\n                legend=true,\n                threads=automatic,\n                opts...)\n\nProduce a statistical graphics. The ds argument is referring to a data set (or grouped data set) and plots is a vector of marks, such as Bar, Pie,.... \n\nThe opts... refers to extra keyword arguments which can be passed to sgplot. These keywords depend depend whether ds is a data set or a grouped data set. Below shows the available keyword arguments for each case.\n\nNon-grouped data sets\n\nKeyword arguments\n\nPlot appearance\n\nbackcolor: The backgroud color for whole graph. default: :white\nclip: The clip option for whole plot. default: true\nfont: The default font. default: \"sans-serif\"\nfontweight: The font weight value. default: 400\ngroupcolormodel: The color model to be used when group is used for specific plot. default: :category\nheight: The width of plot. default: 400\nitalic: The default value whether the package use italic fonts. default: false\nwallcolor: The backgroud color for plot area. default: :transparent\nwidth: The width of plot. default: 600\n\nGrouped data sets\n\n\n\n\n\n","category":"function"},{"location":"lib/functions/#Save-figures","page":"Functions","title":"Save figures","text":"","category":"section"},{"location":"lib/functions/","page":"Functions","title":"Functions","text":"pdf\npng\nsavefig\nsvg","category":"page"},{"location":"lib/functions/#StatisticalGraphics.pdf","page":"Functions","title":"StatisticalGraphics.pdf","text":"pdf(filename::AbstractString, v::SGPlots; s=1)\n\nSave the plot v as a pdf file with name filename. The s keyword can be used to scale the output.\n\n\n\n\n\n","category":"function"},{"location":"lib/functions/#StatisticalGraphics.png","page":"Functions","title":"StatisticalGraphics.png","text":"png(filename::AbstractString, v::SGPlots; s=1)\n\nSave the plot v as a png file with name filename. The s keyword can be used to scale the output.\n\n\n\n\n\n","category":"function"},{"location":"lib/functions/#StatisticalGraphics.savefig","page":"Functions","title":"StatisticalGraphics.savefig","text":"savefig(filename::AbstractString, v::SGPlots; s = 1)\n\nSave the plot v as a file with name filename. The file format will be picked based on the extension of the filename.\n\n\n\n\n\n","category":"function"},{"location":"lib/functions/#StatisticalGraphics.svg","page":"Functions","title":"StatisticalGraphics.svg","text":"svg(filename::AbstractString, v::SGPlots; s=1)\n\nSave the plot v as a svg file with name filename. The s keyword can be used to scale the output.\n\n\n\n\n\n","category":"function"},{"location":"lib/functions/#Miscellaneous","page":"Functions","title":"Miscellaneous","text":"","category":"section"},{"location":"lib/functions/","page":"Functions","title":"Functions","text":"gradient","category":"page"},{"location":"lib/functions/#StatisticalGraphics.gradient","page":"Functions","title":"StatisticalGraphics.gradient","text":"gradient([colors...]; direction = [0,1,0,0])\n\nA linear gradient interpolates colors along a line, from a starting point to an ending point. By default a linear gradient runs horizontally, from left to right. Use the direction to configure the gradient direction, e.g. [0,0,0,1] runs the gradient vertically. All coordinates are defined in a normalized [0, 1] coordinate space, relative to the bounding box of the item being colored.\n\nExamples\n\ngradient()\ngradient(:red, :white, :blue)\n\n\n\n\n\n","category":"function"},{"location":"man/pyramid/#Example","page":"Pyramid","title":"Example","text":"","category":"section"},{"location":"man/pyramid/","page":"Pyramid","title":"Pyramid","text":"Using sgmanipulate to produce an interactive graph. In the following example, we pass rangetype = :year to make sure that the input type for :year is of range type.","category":"page"},{"location":"man/pyramid/","page":"Pyramid","title":"Pyramid","text":"using InMemoryDatasets, DLMReader, StatisticalGraphics, Chain\n\npopulation = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                              \"..\", \"docs\", \"assets\", \"population.csv\"))\n\nsex(x) = x == 1 ? \"male\" : \"female\" # format for :sex\n\nsetformat!(population, :sex => sex)\n\nbase_stat(f, x) = -last(x) # use the negative value of female pop as baseline\n\n@chain population begin\n    groupby(:year)\n    sgmanipulate(\n                    Bar(\n                        y=:age, response=:people, group=:sex,\n                        baselineresponse = :people,\n                        baselinestat=base_stat\n                        ),\n                        rangetype=:year,\n                        xaxis=Axis(title=\"Population\", values=((-12:3:12).*10^6, string.(abs.(-12:3:12), \"M\")))\n                )\nend","category":"page"},{"location":"man/nations/#Wealth-and-Health-of-nations","page":"Nations","title":"Wealth and Health of nations","text":"","category":"section"},{"location":"man/nations/","page":"Nations","title":"Nations","text":"using InMemoryDatasets, DLMReader, StatisticalGraphics, Chain\n\nnations = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                              \"..\", \"docs\", \"assets\", \"nations.csv\"),\n                              emptycolname=true, quotechar='\"')\n\n@chain nations begin\n  sort([:population, :continent], rev=[true, false]);\n  groupby(:year); \n  sgmanipulate(\n        Bubble(x=:gdpPercap,\n                y=:lifeExp,\n                colorresponse=:region,\n                colormodel=:category,\n                size=:population,\n                outlinecolor=:white,\n                labelresponse=:country,\n                labelsize=8,\n                labelcolor=:colorresponse,\n                maxsize=70,\n                tooltip=true\n                ),\n                showheaders=true,\n                headercolor=\"#aaaaaa33\",\n                headersize=150,\n                headeroffset=-400,\n                xaxis=Axis(type=:log, nice=false, grid=true, gridthickness=0.1),\n                yaxis=Axis(grid=true, gridthickness=0.1),\n                width=600,\n                height=600,\n                clip=false,\n                wallcolor=:black\n            )\nend","category":"page"},{"location":"Plots/Segment/segment/#demo_segment","page":"Line segments","title":"Line segments","text":"","category":"section"},{"location":"Plots/Segment/segment/","page":"Line segments","title":"Line segments","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Segment/segment/","page":"Line segments","title":"Line segments","text":"using InMemoryDatasets, StatisticalGraphics, DLMReader\n\nsvg(\"assets/segment_1.svg\", sgplot(Dataset(y=1:1:4, low=rand(4), up=rand(4) .+ 1.3), [Segment(y=:y, lower=:low, upper=:up), Scatter(y=:y, x=:low, symbol=:stroke, angle=90), Scatter(y=:y, x=:up, symbol=:stroke, angle=90), RefLine(values=1, axis=:xaxis, dash=[2])], width=100, height=100, xaxis=Axis(offset=0, domain=true,labelcolor=:black, tickcolor=:black,titlecolor=:white, padding=10), yaxis=Axis(offset=0,domain=true,labelcolor=:black, tickcolor=:black,titlecolor=:white, tickcount=5, padding =10), legend=false, clip=false)) #hide","category":"page"},{"location":"Plots/Segment/segment/","page":"Line segments","title":"Line segments","text":"Segment produces line segments. For each segment the main coordinate and the lower and the upper value must be supplied.","category":"page"},{"location":"Plots/Segment/segment/","page":"Line segments","title":"Line segments","text":"ds = Dataset(y=1:10, low=rand(10), up=rand(10) .+ 1.3)\nsgplot(ds,\n        Segment(y=:y, lower=:low, upper=:up),\n        clip=false\n      )","category":"page"},{"location":"Plots/Segment/segment/","page":"Line segments","title":"Line segments","text":"Overlay Scatter plot","category":"page"},{"location":"Plots/Segment/segment/","page":"Line segments","title":"Line segments","text":"cars = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"cars.csv\"),\n                                 types=Dict(9=>Date))\ncars_sum = combine(groupby(cars, :Origin), 1=>[IMD.mean, IMD.maximum, IMD.minimum])\n\nsgplot(cars_sum,\n                [\n                    Segment(y=:Origin, lower=r\"^min\", upper=r\"^max\"),\n                    Scatter(y=:Origin, x=r\"^mean\"),\n                    Scatter(y=:Origin, x=r\"^min\", symbol=:stroke, angle=90),\n                    Scatter(y=:Origin, x=r\"^max\", symbol=:stroke, angle=90)\n                ],\n                xaxis=Axis(title=\"Acceleration\", padding=10),\n                yaxis=Axis(padding=.5),\n                width=200\n        )","category":"page"},{"location":"Plots/Segment/segment/","page":"Line segments","title":"Line segments","text":"Segment like other plots accept group.","category":"page"},{"location":"Plots/Segment/segment/","page":"Line segments","title":"Line segments","text":"ohlc = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"ohlc.csv\"),\n                                 types = Dict(2=>Date, 8=>Symbol))\n\nsgplot(ohlc,\n        Segment(x=:date, lower=:low, upper=:high, group=:c),\n        groupcolormodel=ohlc[:, :c],\n        xaxis=Axis(type=:time),\n        yaxis=Axis(title=\"\")\n      )","category":"page"},{"location":"Plots/Segment/segment/","page":"Line segments","title":"Line segments","text":"Candlestick Chart","category":"page"},{"location":"Plots/Segment/segment/","page":"Line segments","title":"Line segments","text":"sgplot(ohlc,\n        [\n            Segment(x=:date, lower=:open, upper=:close, group=:c, thickness=5),\n            Segment(x=:date, lower=:low, upper=:high, group=:c)\n        ],\n        groupcolormodel=ohlc[:, :c],\n        xaxis=Axis(type=:time),\n        yaxis=Axis(title=\"\"),\n        legend=false\n      )","category":"page"},{"location":"Plots/Segment/segment/","page":"Line segments","title":"Line segments","text":"","category":"page"},{"location":"Plots/Segment/segment/","page":"Line segments","title":"Line segments","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"Plots/Band/band/#demo_band_plot1","page":"Band plot","title":"Band plot","text":"","category":"section"},{"location":"Plots/Band/band/","page":"Band plot","title":"Band plot","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Band/band/","page":"Band plot","title":"Band plot","text":"Band allows users to produce Band plot. The plot mark needs a coordinate and lower and upper values.","category":"page"},{"location":"Plots/Band/band/","page":"Band plot","title":"Band plot","text":"using InMemoryDatasets, DLMReader, StatisticalGraphics\n\nsvg(\"assets/band_plot1.svg\", sgplot(Dataset(x=-5:5, y=-(-5:5).^2, y2=(-5:5).^2 .+ 5), [Band(x=:x, lower=:y, upper=:y2, thickness=2, interpolate=:basis), RefLine(values=[0], axis=:yaxis)], width=100, height=100, xaxis=Axis(translate=0,offset=0, grid=true, griddash=[3]), yaxis=Axis(translate=0, grid=true, offset=0, griddash=[3]))) #hide\n\n\nds = Dataset(\n            x = 1:4,\n            y = rand(4),\n            y2 = rand(4) .+ 5\n)\n\nsgplot(ds, Band(x=:x, lower=:y, upper=:y2))","category":"page"},{"location":"Plots/Band/band/","page":"Band plot","title":"Band plot","text":"Combining with other plots","category":"page"},{"location":"Plots/Band/band/","page":"Band plot","title":"Band plot","text":"dubai_weather = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"dubai_weather.csv\"),\n                                 types=Dict(1 =>Date))\n\nsgplot(\n        dubai_weather,\n        [\n          Band(x=:date, lower=:min, upper=:max),\n          Line(x=:date, y=:min, color=\"#4682b4\", thickness=1),\n          Line(x=:date, y=:max, color=\"#ff7f0e\", thickness=0.5),\n          Line(x=:date, y=:pressure, color=\"#2ca02c\", y2axis=true, breaks=true),\n          Scatter(x=:date, y=:pressure, outlinecolor=\"#2ca02c\", size=10, y2axis=true)\n        ],\n        xaxis=Axis(offset=10, type=:date, grid=true, griddash=[1, 1], title=\"Date\"),\n        yaxis=Axis(offset=10, grid=true, griddash=[1, 1], title=\"Temperature(°C)\"),\n        y2axis=Axis(offset=10, title=\"Pressure\")\n)","category":"page"},{"location":"Plots/Band/band/","page":"Band plot","title":"Band plot","text":"unemployment stacked area plot across industries","category":"page"},{"location":"Plots/Band/band/","page":"Band plot","title":"Band plot","text":"Reproducing an example from the vega`s examples collection.","category":"page"},{"location":"Plots/Band/band/","page":"Band plot","title":"Band plot","text":"unemployment = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                        \"..\", \"docs\", \"assets\", \"unemployment_across_industry.csv\"),\n                        types = Dict(2=>Date))\n\nsort!(unemployment, :series, rev=true) # keep alphabetical order\nmodify!(groupby(unemployment, :date), :count=>cumsum=>:cum_sum)\nsort!(unemployment, [:date,:cum_sum], rev=[false,true]) # put the larger areas behind the smaller one\n\nsgplot(\n        unemployment,\n        Band(x=:date, lower=0.0, upper=:cum_sum, group=:series, opacity=1),\n        nominal = [:series],\n        xaxis=Axis(type=:time, nice=false),\n        yaxis=Axis(title=\"\"),\n        groupcolormodel = Dict(:scheme=>\"category20b\"),\n      )","category":"page"},{"location":"Plots/Band/band/","page":"Band plot","title":"Band plot","text":"","category":"page"},{"location":"Plots/Band/band/","page":"Band plot","title":"Band plot","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"Plots/Pie/pie/#demo_pie","page":"Pie chart","title":"Pie chart","text":"","category":"section"},{"location":"Plots/Pie/pie/","page":"Pie chart","title":"Pie chart","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"Plots/Pie/pie/","page":"Pie chart","title":"Pie chart","text":"using InMemoryDatasets, StatisticalGraphics, DLMReader\n\nsvg(\"assets/pie_1.svg\", sgplot(Dataset(x=1:4, y=[1,1,1.5,2]), Pie(category=:x, response=:y), width=150, height=100, legend=false)) #hide","category":"page"},{"location":"Plots/Pie/pie/","page":"Pie chart","title":"Pie chart","text":"Pie chart shows the frequency of category in a data set as proportional slices of a whole circle","category":"page"},{"location":"Plots/Pie/pie/","page":"Pie chart","title":"Pie chart","text":"sgplot(Dataset(x=[1,2,3,3,4,4,4]),\n             Pie(category=:x)\n       )","category":"page"},{"location":"Plots/Pie/pie/","page":"Pie chart","title":"Pie chart","text":"Users can pass a column as response for computing the slices based on the aggregated values of the passed column. The stat keyword argument is used to aggregate the values.","category":"page"},{"location":"Plots/Pie/pie/","page":"Pie chart","title":"Pie chart","text":"cars = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                                 \"..\", \"docs\", \"assets\", \"cars.csv\"),\n                                 types=Dict(9=>Date))\n\n\nsgplot(cars,\n            Pie(category=:Origin, response=:Acceleration, stat=IMD.mean)\n        )","category":"page"},{"location":"Plots/Pie/pie/","page":"Pie chart","title":"Pie chart","text":"A column can be passed as group to produce a nested pie chart","category":"page"},{"location":"Plots/Pie/pie/","page":"Pie chart","title":"Pie chart","text":"sgplot(cars,\n\n            Pie(category=:Cylinders,\n                group=:Origin,\n                groupspace=0.05,\n                )\n    )","category":"page"},{"location":"Plots/Pie/pie/","page":"Pie chart","title":"Pie chart","text":"The donut chart is produced by passing innerradius","category":"page"},{"location":"Plots/Pie/pie/","page":"Pie chart","title":"Pie chart","text":"sgplot(cars,\n            Pie(category=:Origin, innerradius=0.4)\n        )","category":"page"},{"location":"Plots/Pie/pie/","page":"Pie chart","title":"Pie chart","text":"Slices can be labeled based on their frequency and/or category","category":"page"},{"location":"Plots/Pie/pie/","page":"Pie chart","title":"Pie chart","text":"sgplot(cars,\n            Pie(category=:Origin, label=:both)\n        )","category":"page"},{"location":"Plots/Pie/pie/","page":"Pie chart","title":"Pie chart","text":"","category":"page"},{"location":"Plots/Pie/pie/","page":"Pie chart","title":"Pie chart","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"#StatisticalGraphics.jl","page":"Introduction","title":"StatisticalGraphics.jl","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Welcome to the StatisticalGraphics.jl documentation!","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"This resource aims to teach you everything you need to know to get up and running with the StatisticalGraphics.jl package.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"If you are new to StatisticalGraphics.jl, probably the Usage section in manual should be a good starting point.","category":"page"},{"location":"man/panel/#Introduction","page":"Panel","title":"Introduction","text":"","category":"section"},{"location":"man/panel/","page":"Panel","title":"Panel","text":"When a grouped data set is passed as the first argument of sgplot, a multiple panel graph is produced for each group of observations. Four types of layout can be used to arrange the produced plots.","category":"page"},{"location":"man/panel/#Panel","page":"Panel","title":"Panel","text":"","category":"section"},{"location":"man/panel/","page":"Panel","title":"Panel","text":"Plots are put side by side. user can control how many rows or column should be produced.","category":"page"},{"location":"man/panel/#Example","page":"Panel","title":"Example","text":"","category":"section"},{"location":"man/panel/","page":"Panel","title":"Panel","text":"\nusing InMemoryDatasets, StatisticalGraphics\n\npanel_example = Dataset(rand(1:4, 1000, 10), :auto)\n\nsgplot(\n        groupby(panel_example, [:x5, :x6]), \n        Pie(category=:x7,\n            label=:both,\n            labelsize=8,\n            innerradius=0.4\n          ),\n        width = 100,\n        height = 100,\n        columns=5,\n        legend=false\n      )","category":"page"},{"location":"man/panel/","page":"Panel","title":"Panel","text":"using InMemoryDatasets, DLMReader, StatisticalGraphics, Chain\n\nmovies = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                              \"..\", \"docs\", \"assets\", \"movies.csv\"),\n                              dlmstr=\"::\")\n@chain movies begin\n    delete(\"Major Genre\", by = contains(\"Concert\"), missings=false)\n    groupby(\"Major Genre\")\n    sgplot(\n            [\n                Scatter(x=\"Rotten Tomatoes Rating\", y=\"IMDB Rating\", size=10),\n                Reg(\n                      x=\"Rotten Tomatoes Rating\", y=\"IMDB Rating\",\n                      degree=3,\n                      clm=true,\n                    )\n            ],\n            xaxis=Axis(grid=true,gridcolor=:white),\n            yaxis=Axis(grid=true,gridcolor=:white),\n            height=200,\n            width=200,\n            columns=4,\n            columnspace=15,\n            rowspace=15,\n            headercolname=false,\n            headeroffset=-20,\n            headercolor=:white,\n            headersize=20,\n            headeritalic=true,\n            wallcolor=:lightgray,\n            clip=false\n          )\nend","category":"page"},{"location":"man/panel/#Lattice","page":"Panel","title":"Lattice","text":"","category":"section"},{"location":"man/panel/","page":"Panel","title":"Panel","text":"This layout is supported when two columns are selected to group data. One column will be used as the row column and the other one as the column.","category":"page"},{"location":"man/panel/#Example-2","page":"Panel","title":"Example","text":"","category":"section"},{"location":"man/panel/","page":"Panel","title":"Panel","text":"Passing layout=:lattice change the default layout to lattice","category":"page"},{"location":"man/panel/","page":"Panel","title":"Panel","text":"using InMemoryDatasets, StatisticalGraphics\n\npanel_example = Dataset(rand(1:4, 1000, 10), :auto)\nsgplot(\n        gatherby(panel_example, [:x3, :x4]), \n        Bar(x=:x1, group=:x2),\n        nominal = [:x2],\n        layout = :lattice,\n        width = 100,\n        height = 100\n      )","category":"page"},{"location":"man/panel/","page":"Panel","title":"Panel","text":"using InMemoryDatasets, StatisticalGraphics\n\nfun_example = Dataset(rand(1:4, 1000, 4), :auto)\nsgplot(\n        gatherby(fun_example, [:x3, :x4]), \n        Bar(x=:x1, group=:x2, barcorner=15),\n        nominal = :x2,\n        layout = :lattice,\n        rowspace=5,\n        columnspace=5,\n        width = 100,\n        height = 100,\n        wallcolor=:lightgray,\n        showheaders = false,\n        xaxis=Axis(show=false),\n        yaxis=Axis(show=false),\n        legend=false,\n        clip=false\n      )","category":"page"},{"location":"man/panel/#Row","page":"Panel","title":"Row","text":"","category":"section"},{"location":"man/panel/","page":"Panel","title":"Panel","text":"When one column is used to group data, this option can be used to put graphs in a row layout.","category":"page"},{"location":"man/panel/","page":"Panel","title":"Panel","text":"To produce a row layout, user must pass layout=:row","category":"page"},{"location":"man/panel/#Examples","page":"Panel","title":"Examples","text":"","category":"section"},{"location":"man/panel/","page":"Panel","title":"Panel","text":"using InMemoryDatasets, DLMReader, StatisticalGraphics\n\ncars = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                              \"..\", \"docs\", \"assets\", \"cars.csv\"),\n                            types = Dict(9=>Date))\nmake_fmt(x) = split(x)[1]\nsetformat!(cars, :Name => make_fmt)\nsgplot(\n        groupby(cars, :Cylinders), \n        Bar(response=:Horsepower, x=:Name,\n            stat=IMD.mean,\n            colorresponse=:Acceleration,\n            colorstat=IMD.mean,\n            orderresponse=:Horsepower,\n            orderstat=IMD.maximum,\n            outlinethickness=0.5,\n            space=0,\n            colormodel=[\"#d53e4f\", \"#fc8d59\", \"#fee08b\", \"#e6f598\", \"#99d594\"]\n          ),\n          \n        layout = :row,\n        columnspace = 5,\n        linkaxis=:y,\n        proportional=true,\n\n        stepsize=15,\n        xaxis=Axis(title=\"Make\", angle=-90, baseline=:middle, align=:right, ticksize=0, domain=false, titlepadding=20),\n        yaxis=Axis(title=\"Horsepower\", domain=false),\n        \n        headercolname = false,\n        headersize=12,\n        headerfontweight=900,\n        \n        height=400,\n      )","category":"page"},{"location":"man/panel/#Column","page":"Panel","title":"Column","text":"","category":"section"},{"location":"man/panel/","page":"Panel","title":"Panel","text":"When one column is used to group data, this option can be used to put graphs in a column layout.","category":"page"},{"location":"man/panel/","page":"Panel","title":"Panel","text":"To produce a row layout, user must pass layout=:column","category":"page"},{"location":"man/panel/","page":"Panel","title":"Panel","text":"U-District Cuisine Example","category":"page"},{"location":"man/panel/","page":"Panel","title":"Panel","text":"Reproducing an example from the vega`s examples collection.","category":"page"},{"location":"man/panel/","page":"Panel","title":"Panel","text":"using InMemoryDatasets, DLMReader, StatisticalGraphics\n\nudistrict = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                              \"..\", \"docs\", \"assets\", \"udistrict.csv\"))\n# contains some information - use to customise the appearance\nudistrict_info = filereader(joinpath(dirname(pathof(StatisticalGraphics)),\n                              \"..\", \"docs\", \"assets\", \"udistrict_info.csv\"),\n                               quotechar='\"')\n\n# order data\nleftjoin!(udistrict, udistrict_info, on = :key)\nsort!(udistrict, :order)\n\n# actual graph\nsgplot(\n        gatherby(udistrict, :names), \n\n        Density(x=:lat, type=:kernel, bw=0.0005, npoints=200,\n                scale=(x; samplesize, args...)->x .* samplesize, # to match the scale in the original example\n        \n                group=:names,\n                grouporder=:data,\n\n                fillopacity=0.7, \n                color=:white\n                ),\n        yaxis=Axis(show=false),\n        xaxis=Axis(title=\"\",\n                    grid=true,\n                    griddash=[2],\n                    values=([47.6516, 47.655363, 47.6584, 47.6614, 47.664924, 47.668519], [\"Boat St.\", \"40th St.\", \"42nd St.\", \"45th St.\", \"50th St.\", \"55th St.\"])\n                  ),\n        \n        layout=:column,\n        width=800,\n        height=70,\n        rowspace=-50, # to force overlaps\n        panelborder=false,\n        \n        headercolname=false,\n        headerangle=0,\n        headerloc=:start,\n        headeralign=:left,\n        \n        # set the font for the whole graph\n        font=\"Times\",\n        italic=true,\n        fontweight=100,\n        \n        # change default colors\n        groupcolormodel=udistrict_info[:, :color],\n        \n        legend=false\n      )","category":"page"}]
}
